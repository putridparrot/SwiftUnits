// <auto-generated>
// This code was generated by the UnitCodeGenerator tool
//
// Changes to this file will be lost if the code is regenerated
// </auto-generated>

import XCTest
@testable import SwiftUnits

final class BtuTests: XCTestCase {
	func testConvertKnownBtuTokilojoules_1() throws {
		let result = Energy.Btu.tokilojoules(100.0)
		XCTAssertEqual(105.506, result, accuracy: 0.01)
	}

	func testConvertKnownBtuTokilojoules_2() throws {
		let result = Energy.Btu.tokilojoules(987.65)
		XCTAssertEqual(1042.03, result, accuracy: 0.01)
	}

	func testConvertKnownBtuTokilojoules_3() throws {
		let result = Energy.Btu.tokilojoules(555666.0)
		XCTAssertEqual(586258.6917293, result, accuracy: 0.01)
	}

	func testConvertKnownBtuTokilocalories_1() throws {
		let result = Energy.Btu.tokilocalories(67.9)
		XCTAssertEqual(17.12196, result, accuracy: 0.01)
	}

	func testConvertKnownBtuTokilocalories_2() throws {
		let result = Energy.Btu.tokilocalories(109.9)
		XCTAssertEqual(27.712867639325825, result, accuracy: 0.01)
	}

	func testConvertKnownBtuTokilocalories_3() throws {
		let result = Energy.Btu.tokilocalories(5000.0)
		XCTAssertEqual(1260.8220036090, result, accuracy: 0.01)
	}

	func testConvertKnownBtuTojoules_1() throws {
		let result = Energy.Btu.tojoules(5.0)
		XCTAssertEqual(5275.3, result, accuracy: 0.01)
	}

	func testConvertKnownBtuTojoules_2() throws {
		let result = Energy.Btu.tojoules(912.9)
		XCTAssertEqual(963164.274, result, accuracy: 0.01)
	}

	func testConvertKnownBtuTojoules_3() throws {
		let result = Energy.Btu.tojoules(109.0)
		XCTAssertEqual(115001.54, result, accuracy: 0.01)
	}

	func testConvertKnownBtuTocalories_1() throws {
		let result = Energy.Btu.tocalories(56.0)
		XCTAssertEqual(14121.20644042079, result, accuracy: 0.01)
	}

	func testConvertKnownBtuTocalories_2() throws {
		let result = Energy.Btu.tocalories(123.0)
		XCTAssertEqual(31016.221288781402, result, accuracy: 0.01)
	}

	func testConvertKnownBtuTocalories_3() throws {
		let result = Energy.Btu.tocalories(0.9)
		XCTAssertEqual(226.9476, result, accuracy: 0.01)
	}

	func testConvertKnownBtuTouSTherms_1() throws {
		let result = Energy.Btu.touSTherms(12000.0)
		XCTAssertEqual(0.120028657, result, accuracy: 0.01)
	}

	func testConvertKnownBtuTouSTherms_2() throws {
		let result = Energy.Btu.touSTherms(9876.5)
		XCTAssertEqual(0.098788586, result, accuracy: 0.01)
	}

	func testConvertKnownBtuTouSTherms_3() throws {
		let result = Energy.Btu.touSTherms(666.999)
		XCTAssertEqual(0.006671583, result, accuracy: 0.01)
	}

	func testConvertKnownBtuTowattHours_1() throws {
		let result = Energy.Btu.towattHours(900.0)
		XCTAssertEqual(263.764, result, accuracy: 0.01)
	}

	func testConvertKnownBtuTowattHours_2() throws {
		let result = Energy.Btu.towattHours(125.7)
		XCTAssertEqual(36.839034, result, accuracy: 0.01)
	}

	func testConvertKnownBtuTowattHours_3() throws {
		let result = Energy.Btu.towattHours(0.99)
		XCTAssertEqual(0.2901404, result, accuracy: 0.01)
	}

	func testConvertKnownBtuTokilowattHours_1() throws {
		let result = Energy.Btu.tokilowattHours(9000.0)
		XCTAssertEqual(2.63764, result, accuracy: 0.01)
	}

	func testConvertKnownBtuTokilowattHours_2() throws {
		let result = Energy.Btu.tokilowattHours(12345.0)
		XCTAssertEqual(3.6179624, result, accuracy: 0.01)
	}

	func testConvertKnownBtuTokilowattHours_3() throws {
		let result = Energy.Btu.tokilowattHours(8090.8)
		XCTAssertEqual(2.37117941, result, accuracy: 0.01)
	}

	func testConvertKnownBtuTofootPounds_1() throws {
		let result = Energy.Btu.tofootPounds(189.0)
		XCTAssertEqual(147073.9409, result, accuracy: 0.01)
	}

	func testConvertKnownBtuTofootPounds_2() throws {
		let result = Energy.Btu.tofootPounds(0.3)
		XCTAssertEqual(233.451, result, accuracy: 0.01)
	}

	func testConvertKnownBtuTofootPounds_3() throws {
		let result = Energy.Btu.tofootPounds(2.6)
		XCTAssertEqual(2023.24, result, accuracy: 0.01)
	}

	func testConvertKnownBtuToelectronvolts_1() throws {
		let result = Energy.Btu.toelectronvolts(0.0000000789)
		XCTAssertEqual(519567655294184.88, result, accuracy: 0.01)
	}

	func testConvertKnownBtuToelectronvolts_2() throws {
		let result = Energy.Btu.toelectronvolts(0.000001002)
		XCTAssertEqual(6598311667994592.0, result, accuracy: 0.01)
	}

	func testConvertKnownBtuToelectronvolts_3() throws {
		let result = Energy.Btu.toelectronvolts(0.000000001)
		XCTAssertEqual(6585141385224.14, result, accuracy: 0.01)
	}

}

final class CaloriesTests: XCTestCase {
	func testConvertKnownCaloriesTokilojoules_1() throws {
		let result = Energy.Calories.tokilojoules(109.0)
		XCTAssertEqual(0.456056, result, accuracy: 0.01)
	}

	func testConvertKnownCaloriesTokilojoules_2() throws {
		let result = Energy.Calories.tokilojoules(12.3)
		XCTAssertEqual(0.0514632, result, accuracy: 0.01)
	}

	func testConvertKnownCaloriesTokilojoules_3() throws {
		let result = Energy.Calories.tokilojoules(9876.0)
		XCTAssertEqual(41.32118, result, accuracy: 0.01)
	}

	func testConvertKnownCaloriesTokilocalories_1() throws {
		let result = Energy.Calories.tokilocalories(900.0)
		XCTAssertEqual(0.9, result, accuracy: 0.01)
	}

	func testConvertKnownCaloriesTokilocalories_2() throws {
		let result = Energy.Calories.tokilocalories(1782.0)
		XCTAssertEqual(1.782, result, accuracy: 0.01)
	}

	func testConvertKnownCaloriesTokilocalories_3() throws {
		let result = Energy.Calories.tokilocalories(900800.0)
		XCTAssertEqual(900.8, result, accuracy: 0.01)
	}

	func testConvertKnownCaloriesTojoules_1() throws {
		let result = Energy.Calories.tojoules(98.0)
		XCTAssertEqual(410.032, result, accuracy: 0.01)
	}

	func testConvertKnownCaloriesTojoules_2() throws {
		let result = Energy.Calories.tojoules(1.67)
		XCTAssertEqual(6.98728, result, accuracy: 0.01)
	}

	func testConvertKnownCaloriesTojoules_3() throws {
		let result = Energy.Calories.tojoules(55.0)
		XCTAssertEqual(230.12, result, accuracy: 0.01)
	}

	func testConvertKnownCaloriesTobtu_1() throws {
		let result = Energy.Calories.tobtu(550.0)
		XCTAssertEqual(2.18112, result, accuracy: 0.01)
	}

	func testConvertKnownCaloriesTobtu_2() throws {
		let result = Energy.Calories.tobtu(1234.0)
		XCTAssertEqual(4.893633, result, accuracy: 0.01)
	}

	func testConvertKnownCaloriesTobtu_3() throws {
		let result = Energy.Calories.tobtu(900.9)
		XCTAssertEqual(3.5726692, result, accuracy: 0.01)
	}

	func testConvertKnownCaloriesTouSTherms_1() throws {
		let result = Energy.Calories.touSTherms(9000000.0)
		XCTAssertEqual(0.356995242, result, accuracy: 0.01)
	}

	func testConvertKnownCaloriesTouSTherms_2() throws {
		let result = Energy.Calories.touSTherms(12e6)
		XCTAssertEqual(0.475993657, result, accuracy: 0.01)
	}

	func testConvertKnownCaloriesTouSTherms_3() throws {
		let result = Energy.Calories.touSTherms(100200300.0)
		XCTAssertEqual(3.974558932, result, accuracy: 0.01)
	}

	func testConvertKnownCaloriesTowattHours_1() throws {
		let result = Energy.Calories.towattHours(600.0)
		XCTAssertEqual(0.697333, result, accuracy: 0.01)
	}

	func testConvertKnownCaloriesTowattHours_2() throws {
		let result = Energy.Calories.towattHours(1234.5)
		XCTAssertEqual(1.43476333, result, accuracy: 0.01)
	}

	func testConvertKnownCaloriesTowattHours_3() throws {
		let result = Energy.Calories.towattHours(88.7)
		XCTAssertEqual(0.1030891, result, accuracy: 0.01)
	}

	func testConvertKnownCaloriesTokilowattHours_1() throws {
		let result = Energy.Calories.tokilowattHours(100900.0)
		XCTAssertEqual(0.117268222, result, accuracy: 0.01)
	}

	func testConvertKnownCaloriesTokilowattHours_2() throws {
		let result = Energy.Calories.tokilowattHours(987654.0)
		XCTAssertEqual(1.14787343, result, accuracy: 0.01)
	}

	func testConvertKnownCaloriesTokilowattHours_3() throws {
		let result = Energy.Calories.tokilowattHours(506012.0)
		XCTAssertEqual(0.588098391, result, accuracy: 0.01)
	}

	func testConvertKnownCaloriesTofootPounds_1() throws {
		let result = Energy.Calories.tofootPounds(123.0)
		XCTAssertEqual(379.573, result, accuracy: 0.01)
	}

	func testConvertKnownCaloriesTofootPounds_2() throws {
		let result = Energy.Calories.tofootPounds(9.01)
		XCTAssertEqual(27.8045, result, accuracy: 0.01)
	}

	func testConvertKnownCaloriesTofootPounds_3() throws {
		let result = Energy.Calories.tofootPounds(2.8)
		XCTAssertEqual(8.64069, result, accuracy: 0.01)
	}

	func testConvertKnownCaloriesToelectronvolts_1() throws {
		let result = Energy.Calories.toelectronvolts(0.0000091)
		XCTAssertEqual(237800626261534.66, result, accuracy: 0.01)
	}

	func testConvertKnownCaloriesToelectronvolts_2() throws {
		let result = Energy.Calories.toelectronvolts(0.0008)
		XCTAssertEqual(20905549561453600.0, result, accuracy: 0.01)
	}

	func testConvertKnownCaloriesToelectronvolts_3() throws {
		let result = Energy.Calories.toelectronvolts(0.00123)
		XCTAssertEqual(32142282450734908.0, result, accuracy: 0.01)
	}

}

final class ElectronvoltsTests: XCTestCase {
	func testConvertKnownElectronvoltsTokilojoules_1() throws {
		let result = Energy.Electronvolts.tokilojoules(123456789.0)
		XCTAssertEqual(1.9779957413e-14, result, accuracy: 0.01)
	}

	func testConvertKnownElectronvoltsTokilojoules_2() throws {
		let result = Energy.Electronvolts.tokilojoules(900900900.0)
		XCTAssertEqual(1.4434023094e-13, result, accuracy: 0.01)
	}

	func testConvertKnownElectronvoltsTokilojoules_3() throws {
		let result = Energy.Electronvolts.tokilojoules(123456789123456789.0)
		XCTAssertEqual(1.977995743237493669e-5, result, accuracy: 0.01)
	}

	func testConvertKnownElectronvoltsTokilocalories_1() throws {
		let result = Energy.Electronvolts.tokilocalories(100200300400.0)
		XCTAssertEqual(1.6053857310684e-11, result, accuracy: 0.01)
	}

	func testConvertKnownElectronvoltsTokilocalories_2() throws {
		let result = Energy.Electronvolts.tokilocalories(123456789.0)
		XCTAssertEqual(1.9779957413e-14, result, accuracy: 0.01)
	}

	func testConvertKnownElectronvoltsTokilocalories_3() throws {
		let result = Energy.Electronvolts.tokilocalories(900800700600.0)
		XCTAssertEqual(1.4432417722369e-10, result, accuracy: 0.01)
	}

	func testConvertKnownElectronvoltsTojoules_1() throws {
		let result = Energy.Electronvolts.tojoules(123456789123.0)
		XCTAssertEqual(1.9779957432302e-8, result, accuracy: 0.01)
	}

	func testConvertKnownElectronvoltsTojoules_2() throws {
		let result = Energy.Electronvolts.tojoules(900800700600.0)
		XCTAssertEqual(1.4432417722369e-7, result, accuracy: 0.01)
	}

	func testConvertKnownElectronvoltsTojoules_3() throws {
		let result = Energy.Electronvolts.tojoules(999888777666.0)
		XCTAssertEqual(1.601998367183e-7, result, accuracy: 0.01)
	}

	func testConvertKnownElectronvoltsTobtu_1() throws {
		let result = Energy.Electronvolts.tobtu(100020003000100020003000.0)
		XCTAssertEqual(15.188741377060267723, result, accuracy: 0.01)
	}

	func testConvertKnownElectronvoltsTobtu_2() throws {
		let result = Energy.Electronvolts.tobtu(999888777666999888777666.0)
		XCTAssertEqual(151.84014791315084381, result, accuracy: 0.01)
	}

	func testConvertKnownElectronvoltsTobtu_3() throws {
		let result = Energy.Electronvolts.tobtu(12345678912341234567891234.0)
		XCTAssertEqual(1874.7782293466862029, result, accuracy: 0.01)
	}

	func testConvertKnownElectronvoltsTocalories_1() throws {
		let result = Energy.Electronvolts.tocalories(666333111999.0)
		XCTAssertEqual(2.5515853167503e-8, result, accuracy: 0.01)
	}

	func testConvertKnownElectronvoltsTocalories_2() throws {
		let result = Energy.Electronvolts.tocalories(999888777666555.0)
		XCTAssertEqual(3.8288679904011702e-5, result, accuracy: 0.01)
	}

	func testConvertKnownElectronvoltsTocalories_3() throws {
		let result = Energy.Electronvolts.tocalories(12345678901234.0)
		XCTAssertEqual(4.727523282641506e-7, result, accuracy: 0.01)
	}

	func testConvertKnownElectronvoltsTouSTherms_1() throws {
		let result = Energy.Electronvolts.touSTherms(666333111999.0)
		XCTAssertEqual(1.0118737258101e-10, result, accuracy: 0.01)
	}

	func testConvertKnownElectronvoltsTouSTherms_2() throws {
		let result = Energy.Electronvolts.touSTherms(999888777666555.0)
		XCTAssertEqual(1.5184014791308327e-7, result, accuracy: 0.01)
	}

	func testConvertKnownElectronvoltsTouSTherms_3() throws {
		let result = Energy.Electronvolts.touSTherms(12345678901234.0)
		XCTAssertEqual(1.874778227659974e-9, result, accuracy: 0.01)
	}

	func testConvertKnownElectronvoltsTowattHours_1() throws {
		let result = Energy.Electronvolts.towattHours(100900700100.0)
		XCTAssertEqual(4.490576030342e-12, result, accuracy: 0.01)
	}

	func testConvertKnownElectronvoltsTowattHours_2() throws {
		let result = Energy.Electronvolts.towattHours(9000800070006000.0)
		XCTAssertEqual(4.00579748289276988e-7, result, accuracy: 0.01)
	}

	func testConvertKnownElectronvoltsTowattHours_3() throws {
		let result = Energy.Electronvolts.towattHours(12345678987654321.0)
		XCTAssertEqual(5.494432653620188248e-7, result, accuracy: 0.01)
	}

	func testConvertKnownElectronvoltsTokilowattHours_1() throws {
		let result = Energy.Electronvolts.tokilowattHours(100900700100.0)
		XCTAssertEqual(4.490576030342e-15, result, accuracy: 0.01)
	}

	func testConvertKnownElectronvoltsTokilowattHours_2() throws {
		let result = Energy.Electronvolts.tokilowattHours(999988887777.0)
		XCTAssertEqual(4.4504410034909e-14, result, accuracy: 0.01)
	}

	func testConvertKnownElectronvoltsTokilowattHours_3() throws {
		let result = Energy.Electronvolts.tokilowattHours(12345678987654321.0)
		XCTAssertEqual(5.494432653620187834e-10, result, accuracy: 0.01)
	}

	func testConvertKnownElectronvoltsTofootPounds_1() throws {
		let result = Energy.Electronvolts.tofootPounds(100900700100.0)
		XCTAssertEqual(1.1923484070355e-8, result, accuracy: 0.01)
	}

	func testConvertKnownElectronvoltsTofootPounds_2() throws {
		let result = Energy.Electronvolts.tofootPounds(999988887777.0)
		XCTAssertEqual(1.1816916594359e-7, result, accuracy: 0.01)
	}

	func testConvertKnownElectronvoltsTofootPounds_3() throws {
		let result = Energy.Electronvolts.tofootPounds(12345678987654321.0)
		XCTAssertEqual(0.0014588948005427860004, result, accuracy: 0.01)
	}

}

final class FootPoundsTests: XCTestCase {
	func testConvertKnownFootPoundsTokilojoules_1() throws {
		let result = Energy.FootPounds.tokilojoules(190.0)
		XCTAssertEqual(0.257605, result, accuracy: 0.01)
	}

	func testConvertKnownFootPoundsTokilojoules_2() throws {
		let result = Energy.FootPounds.tokilojoules(4.6)
		XCTAssertEqual(0.00623676, result, accuracy: 0.01)
	}

	func testConvertKnownFootPoundsTokilojoules_3() throws {
		let result = Energy.FootPounds.tokilojoules(123.8)
		XCTAssertEqual(0.16785026, result, accuracy: 0.01)
	}

	func testConvertKnownFootPoundsTokilocalories_1() throws {
		let result = Energy.FootPounds.tokilocalories(1999.0)
		XCTAssertEqual(0.6477725, result, accuracy: 0.01)
	}

	func testConvertKnownFootPoundsTokilocalories_2() throws {
		let result = Energy.FootPounds.tokilocalories(890.8)
		XCTAssertEqual(0.2886622, result, accuracy: 0.01)
	}

	func testConvertKnownFootPoundsTokilocalories_3() throws {
		let result = Energy.FootPounds.tokilocalories(12000.0)
		XCTAssertEqual(3.8885792, result, accuracy: 0.01)
	}

	func testConvertKnownFootPoundsTojoules_1() throws {
		let result = Energy.FootPounds.tojoules(190.0)
		XCTAssertEqual(257.605, result, accuracy: 0.01)
	}

	func testConvertKnownFootPoundsTojoules_2() throws {
		let result = Energy.FootPounds.tojoules(23.4)
		XCTAssertEqual(31.72614, result, accuracy: 0.01)
	}

	func testConvertKnownFootPoundsTojoules_3() throws {
		let result = Energy.FootPounds.tojoules(9.2)
		XCTAssertEqual(12.4735, result, accuracy: 0.01)
	}

	func testConvertKnownFootPoundsTobtu_1() throws {
		let result = Energy.FootPounds.tobtu(9000.0)
		XCTAssertEqual(11.56561, result, accuracy: 0.01)
	}

	func testConvertKnownFootPoundsTobtu_2() throws {
		let result = Energy.FootPounds.tobtu(45.6)
		XCTAssertEqual(0.05859908, result, accuracy: 0.01)
	}

	func testConvertKnownFootPoundsTobtu_3() throws {
		let result = Energy.FootPounds.tobtu(1996.0)
		XCTAssertEqual(2.564995, result, accuracy: 0.01)
	}

	func testConvertKnownFootPoundsTocalories_1() throws {
		let result = Energy.FootPounds.tocalories(123.0)
		XCTAssertEqual(39.8579, result, accuracy: 0.01)
	}

	func testConvertKnownFootPoundsTocalories_2() throws {
		let result = Energy.FootPounds.tocalories(54.7)
		XCTAssertEqual(17.72544, result, accuracy: 0.01)
	}

	func testConvertKnownFootPoundsTocalories_3() throws {
		let result = Energy.FootPounds.tocalories(109.2)
		XCTAssertEqual(35.386071, result, accuracy: 0.01)
	}

	func testConvertKnownFootPoundsTouSTherms_1() throws {
		let result = Energy.FootPounds.touSTherms(19000000.0)
		XCTAssertEqual(0.24422111613, result, accuracy: 0.01)
	}

	func testConvertKnownFootPoundsTouSTherms_2() throws {
		let result = Energy.FootPounds.touSTherms(1234567.0)
		XCTAssertEqual(0.01586880688, result, accuracy: 0.01)
	}

	func testConvertKnownFootPoundsTouSTherms_3() throws {
		let result = Energy.FootPounds.touSTherms(100200300.0)
		XCTAssertEqual(1.28794890016, result, accuracy: 0.01)
	}

	func testConvertKnownFootPoundsTowattHours_1() throws {
		let result = Energy.FootPounds.towattHours(44.0)
		XCTAssertEqual(0.0165711, result, accuracy: 0.01)
	}

	func testConvertKnownFootPoundsTowattHours_2() throws {
		let result = Energy.FootPounds.towattHours(9080.0)
		XCTAssertEqual(3.419674, result, accuracy: 0.01)
	}

	func testConvertKnownFootPoundsTowattHours_3() throws {
		let result = Energy.FootPounds.towattHours(1200.0)
		XCTAssertEqual(0.4519393, result, accuracy: 0.01)
	}

	func testConvertKnownFootPoundsTokilowattHours_1() throws {
		let result = Energy.FootPounds.tokilowattHours(900000.0)
		XCTAssertEqual(0.338954487, result, accuracy: 0.01)
	}

	func testConvertKnownFootPoundsTokilowattHours_2() throws {
		let result = Energy.FootPounds.tokilowattHours(100200.0)
		XCTAssertEqual(0.0377369329, result, accuracy: 0.01)
	}

	func testConvertKnownFootPoundsTokilowattHours_3() throws {
		let result = Energy.FootPounds.tokilowattHours(9876543.0)
		XCTAssertEqual(3.719665074, result, accuracy: 0.01)
	}

	func testConvertKnownFootPoundsToelectronvolts_1() throws {
		let result = Energy.FootPounds.toelectronvolts(0.00123)
		XCTAssertEqual(10408691651641586.0, result, accuracy: 0.01)
	}

	func testConvertKnownFootPoundsToelectronvolts_2() throws {
		let result = Energy.FootPounds.toelectronvolts(0.0009)
		XCTAssertEqual(7616115842664575.0, result, accuracy: 0.01)
	}

	func testConvertKnownFootPoundsToelectronvolts_3() throws {
		let result = Energy.FootPounds.toelectronvolts(0.00000888)
		XCTAssertEqual(75145676314290.469, result, accuracy: 0.01)
	}

}

final class JoulesTests: XCTestCase {
	func testConvertKnownJoulesTokilojoules_1() throws {
		let result = Energy.Joules.tokilojoules(790.0)
		XCTAssertEqual(0.79, result, accuracy: 0.01)
	}

	func testConvertKnownJoulesTokilojoules_2() throws {
		let result = Energy.Joules.tokilojoules(800100.0)
		XCTAssertEqual(800.1, result, accuracy: 0.01)
	}

	func testConvertKnownJoulesTokilojoules_3() throws {
		let result = Energy.Joules.tokilojoules(509.2)
		XCTAssertEqual(0.5092, result, accuracy: 0.01)
	}

	func testConvertKnownJoulesTokilocalories_1() throws {
		let result = Energy.Joules.tokilocalories(790.0)
		XCTAssertEqual(0.188815, result, accuracy: 0.01)
	}

	func testConvertKnownJoulesTokilocalories_2() throws {
		let result = Energy.Joules.tokilocalories(125.9)
		XCTAssertEqual(0.030090822, result, accuracy: 0.01)
	}

	func testConvertKnownJoulesTokilocalories_3() throws {
		let result = Energy.Joules.tokilocalories(8000.0)
		XCTAssertEqual(1.912046, result, accuracy: 0.01)
	}

	func testConvertKnownJoulesTobtu_1() throws {
		let result = Energy.Joules.tobtu(500.0)
		XCTAssertEqual(0.473909, result, accuracy: 0.01)
	}

	func testConvertKnownJoulesTobtu_2() throws {
		let result = Energy.Joules.tobtu(1910.0)
		XCTAssertEqual(1.810331, result, accuracy: 0.01)
	}

	func testConvertKnownJoulesTobtu_3() throws {
		let result = Energy.Joules.tobtu(67000.1)
		XCTAssertEqual(63.50384184, result, accuracy: 0.01)
	}

	func testConvertKnownJoulesTocalories_1() throws {
		let result = Energy.Joules.tocalories(67.0)
		XCTAssertEqual(16.0134, result, accuracy: 0.01)
	}

	func testConvertKnownJoulesTocalories_2() throws {
		let result = Energy.Joules.tocalories(909.0)
		XCTAssertEqual(217.256, result, accuracy: 0.01)
	}

	func testConvertKnownJoulesTocalories_3() throws {
		let result = Energy.Joules.tocalories(190.0)
		XCTAssertEqual(45.4111, result, accuracy: 0.01)
	}

	func testConvertKnownJoulesTouSTherms_1() throws {
		let result = Energy.Joules.touSTherms(100090000.0)
		XCTAssertEqual(0.948896667059, result, accuracy: 0.01)
	}

	func testConvertKnownJoulesTouSTherms_2() throws {
		let result = Energy.Joules.touSTherms(55.7e6)
		XCTAssertEqual(0.52806018938, result, accuracy: 0.01)
	}

	func testConvertKnownJoulesTouSTherms_3() throws {
		let result = Energy.Joules.touSTherms(1234567890.0)
		XCTAssertEqual(11.70423974501, result, accuracy: 0.01)
	}

	func testConvertKnownJoulesTowattHours_1() throws {
		let result = Energy.Joules.towattHours(56000.0)
		XCTAssertEqual(15.555556, result, accuracy: 0.01)
	}

	func testConvertKnownJoulesTowattHours_2() throws {
		let result = Energy.Joules.towattHours(890.0)
		XCTAssertEqual(0.247222, result, accuracy: 0.01)
	}

	func testConvertKnownJoulesTowattHours_3() throws {
		let result = Energy.Joules.towattHours(22001.0)
		XCTAssertEqual(6.1113889, result, accuracy: 0.01)
	}

	func testConvertKnownJoulesTokilowattHours_1() throws {
		let result = Energy.Joules.tokilowattHours(560000.8)
		XCTAssertEqual(0.1555557, result, accuracy: 0.01)
	}

	func testConvertKnownJoulesTokilowattHours_2() throws {
		let result = Energy.Joules.tokilowattHours(1234567.0)
		XCTAssertEqual(0.3429352778, result, accuracy: 0.01)
	}

	func testConvertKnownJoulesTokilowattHours_3() throws {
		let result = Energy.Joules.tokilowattHours(900100.0)
		XCTAssertEqual(0.250027778, result, accuracy: 0.01)
	}

	func testConvertKnownJoulesTofootPounds_1() throws {
		let result = Energy.Joules.tofootPounds(900.0)
		XCTAssertEqual(663.806, result, accuracy: 0.01)
	}

	func testConvertKnownJoulesTofootPounds_2() throws {
		let result = Energy.Joules.tofootPounds(10.2)
		XCTAssertEqual(7.523134, result, accuracy: 0.01)
	}

	func testConvertKnownJoulesTofootPounds_3() throws {
		let result = Energy.Joules.tofootPounds(6.7)
		XCTAssertEqual(4.94167, result, accuracy: 0.01)
	}

	func testConvertKnownJoulesToelectronvolts_1() throws {
		let result = Energy.Joules.toelectronvolts(0.00000888)
		XCTAssertEqual(55424602968504.0, result, accuracy: 0.01)
	}

	func testConvertKnownJoulesToelectronvolts_2() throws {
		let result = Energy.Joules.toelectronvolts(0.00001234)
		XCTAssertEqual(77020225296322.0, result, accuracy: 0.01)
	}

	func testConvertKnownJoulesToelectronvolts_3() throws {
		let result = Energy.Joules.toelectronvolts(0.00000666)
		XCTAssertEqual(41568452226378.0, result, accuracy: 0.01)
	}

}

final class KilocaloriesTests: XCTestCase {
	func testConvertKnownKilocaloriesTokilojoules_1() throws {
		let result = Energy.Kilocalories.tokilojoules(67.0)
		XCTAssertEqual(280.328, result, accuracy: 0.01)
	}

	func testConvertKnownKilocaloriesTokilojoules_2() throws {
		let result = Energy.Kilocalories.tokilojoules(4.5)
		XCTAssertEqual(18.828, result, accuracy: 0.01)
	}

	func testConvertKnownKilocaloriesTokilojoules_3() throws {
		let result = Energy.Kilocalories.tokilojoules(100.3)
		XCTAssertEqual(419.6552, result, accuracy: 0.01)
	}

	func testConvertKnownKilocaloriesTojoules_1() throws {
		let result = Energy.Kilocalories.tojoules(100.3)
		XCTAssertEqual(419655.2, result, accuracy: 0.01)
	}

	func testConvertKnownKilocaloriesTojoules_2() throws {
		let result = Energy.Kilocalories.tojoules(0.9)
		XCTAssertEqual(3765.6, result, accuracy: 0.01)
	}

	func testConvertKnownKilocaloriesTojoules_3() throws {
		let result = Energy.Kilocalories.tojoules(3.4)
		XCTAssertEqual(14225.6, result, accuracy: 0.01)
	}

	func testConvertKnownKilocaloriesTobtu_1() throws {
		let result = Energy.Kilocalories.tobtu(3.4)
		XCTAssertEqual(13.4833, result, accuracy: 0.01)
	}

	func testConvertKnownKilocaloriesTobtu_2() throws {
		let result = Energy.Kilocalories.tobtu(109.0)
		XCTAssertEqual(432.2576846216055, result, accuracy: 0.01)
	}

	func testConvertKnownKilocaloriesTobtu_3() throws {
		let result = Energy.Kilocalories.tobtu(22.89)
		XCTAssertEqual(90.77411377053717, result, accuracy: 0.01)
	}

	func testConvertKnownKilocaloriesTocalories_1() throws {
		let result = Energy.Kilocalories.tocalories(22.8)
		XCTAssertEqual(22800.0, result, accuracy: 0.01)
	}

	func testConvertKnownKilocaloriesTocalories_2() throws {
		let result = Energy.Kilocalories.tocalories(76.23)
		XCTAssertEqual(76230.0, result, accuracy: 0.01)
	}

	func testConvertKnownKilocaloriesTocalories_3() throws {
		let result = Energy.Kilocalories.tocalories(0.07)
		XCTAssertEqual(70.0, result, accuracy: 0.01)
	}

	func testConvertKnownKilocaloriesTouSTherms_1() throws {
		let result = Energy.Kilocalories.touSTherms(12345.0)
		XCTAssertEqual(0.4896388, result, accuracy: 0.01)
	}

	func testConvertKnownKilocaloriesTouSTherms_2() throws {
		let result = Energy.Kilocalories.touSTherms(90002.0)
		XCTAssertEqual(3.5700317, result, accuracy: 0.01)
	}

	func testConvertKnownKilocaloriesTouSTherms_3() throws {
		let result = Energy.Kilocalories.touSTherms(180180.0)
		XCTAssertEqual(7.14704457, result, accuracy: 0.01)
	}

	func testConvertKnownKilocaloriesTowattHours_1() throws {
		let result = Energy.Kilocalories.towattHours(89.0)
		XCTAssertEqual(103.438, result, accuracy: 0.01)
	}

	func testConvertKnownKilocaloriesTowattHours_2() throws {
		let result = Energy.Kilocalories.towattHours(23.6)
		XCTAssertEqual(27.42844, result, accuracy: 0.01)
	}

	func testConvertKnownKilocaloriesTowattHours_3() throws {
		let result = Energy.Kilocalories.towattHours(0.9)
		XCTAssertEqual(1.046, result, accuracy: 0.01)
	}

	func testConvertKnownKilocaloriesTokilowattHours_1() throws {
		let result = Energy.Kilocalories.tokilowattHours(456.0)
		XCTAssertEqual(0.529973, result, accuracy: 0.01)
	}

	func testConvertKnownKilocaloriesTokilowattHours_2() throws {
		let result = Energy.Kilocalories.tokilowattHours(1090.8)
		XCTAssertEqual(1.267752, result, accuracy: 0.01)
	}

	func testConvertKnownKilocaloriesTokilowattHours_3() throws {
		let result = Energy.Kilocalories.tokilowattHours(567.1)
		XCTAssertEqual(0.65909622, result, accuracy: 0.01)
	}

	func testConvertKnownKilocaloriesTofootPounds_1() throws {
		let result = Energy.Kilocalories.tofootPounds(109.0)
		XCTAssertEqual(336369.64, result, accuracy: 0.01)
	}

	func testConvertKnownKilocaloriesTofootPounds_2() throws {
		let result = Energy.Kilocalories.tofootPounds(0.5)
		XCTAssertEqual(1542.98, result, accuracy: 0.01)
	}

	func testConvertKnownKilocaloriesTofootPounds_3() throws {
		let result = Energy.Kilocalories.tofootPounds(2.4)
		XCTAssertEqual(7406.3, result, accuracy: 0.01)
	}

	func testConvertKnownKilocaloriesToelectronvolts_1() throws {
		let result = Energy.Kilocalories.toelectronvolts(0.0000000666)
		XCTAssertEqual(1740388069688132.2, result, accuracy: 0.01)
	}

	func testConvertKnownKilocaloriesToelectronvolts_2() throws {
		let result = Energy.Kilocalories.toelectronvolts(0.000002)
		XCTAssertEqual(52263905996640608.0, result, accuracy: 0.01)
	}

	func testConvertKnownKilocaloriesToelectronvolts_3() throws {
		let result = Energy.Kilocalories.toelectronvolts(0.000000999)
		XCTAssertEqual(26105821045321988.0, result, accuracy: 0.01)
	}

}

final class KilojoulesTests: XCTestCase {
	func testConvertKnownKilojoulesTokilocalories_1() throws {
		let result = Energy.Kilojoules.tokilocalories(199.0)
		XCTAssertEqual(47.5621, result, accuracy: 0.01)
	}

	func testConvertKnownKilojoulesTokilocalories_2() throws {
		let result = Energy.Kilojoules.tokilocalories(0.67)
		XCTAssertEqual(0.1601338, result, accuracy: 0.01)
	}

	func testConvertKnownKilojoulesTokilocalories_3() throws {
		let result = Energy.Kilojoules.tokilocalories(4.7)
		XCTAssertEqual(1.12333, result, accuracy: 0.01)
	}

	func testConvertKnownKilojoulesTojoules_1() throws {
		let result = Energy.Kilojoules.tojoules(4.7)
		XCTAssertEqual(4700.0, result, accuracy: 0.01)
	}

	func testConvertKnownKilojoulesTojoules_2() throws {
		let result = Energy.Kilojoules.tojoules(7.8)
		XCTAssertEqual(7800.0, result, accuracy: 0.01)
	}

	func testConvertKnownKilojoulesTojoules_3() throws {
		let result = Energy.Kilojoules.tojoules(1800.0)
		XCTAssertEqual(1800000.0, result, accuracy: 0.01)
	}

	func testConvertKnownKilojoulesTobtu_1() throws {
		let result = Energy.Kilojoules.tobtu(1800.0)
		XCTAssertEqual(1706.070, result, accuracy: 0.01)
	}

	func testConvertKnownKilojoulesTobtu_2() throws {
		let result = Energy.Kilojoules.tobtu(1.4)
		XCTAssertEqual(1.32694, result, accuracy: 0.01)
	}

	func testConvertKnownKilojoulesTobtu_3() throws {
		let result = Energy.Kilojoules.tobtu(89.2)
		XCTAssertEqual(84.54529, result, accuracy: 0.01)
	}

	func testConvertKnownKilojoulesTocalories_1() throws {
		let result = Energy.Kilojoules.tocalories(67.0)
		XCTAssertEqual(16013.381899, result, accuracy: 0.01)
	}

	func testConvertKnownKilojoulesTocalories_2() throws {
		let result = Energy.Kilojoules.tocalories(1.4)
		XCTAssertEqual(334.608, result, accuracy: 0.01)
	}

	func testConvertKnownKilojoulesTocalories_3() throws {
		let result = Energy.Kilojoules.tocalories(87.0)
		XCTAssertEqual(20793.5, result, accuracy: 0.01)
	}

	func testConvertKnownKilojoulesTouSTherms_1() throws {
		let result = Energy.Kilojoules.touSTherms(123456.0)
		XCTAssertEqual(1.17041649, result, accuracy: 0.01)
	}

	func testConvertKnownKilojoulesTouSTherms_2() throws {
		let result = Energy.Kilojoules.touSTherms(88000.0)
		XCTAssertEqual(0.83427822, result, accuracy: 0.01)
	}

	func testConvertKnownKilojoulesTouSTherms_3() throws {
		let result = Energy.Kilojoules.touSTherms(9000.0)
		XCTAssertEqual(0.08532391, result, accuracy: 0.01)
	}

	func testConvertKnownKilojoulesTowattHours_1() throws {
		let result = Energy.Kilojoules.towattHours(98000.0)
		XCTAssertEqual(27222.222, result, accuracy: 0.01)
	}

	func testConvertKnownKilojoulesTowattHours_2() throws {
		let result = Energy.Kilojoules.towattHours(1.5)
		XCTAssertEqual(0.416667, result, accuracy: 0.01)
	}

	func testConvertKnownKilojoulesTowattHours_3() throws {
		let result = Energy.Kilojoules.towattHours(67.9)
		XCTAssertEqual(18.86111, result, accuracy: 0.01)
	}

	func testConvertKnownKilojoulesTokilowattHours_1() throws {
		let result = Energy.Kilojoules.tokilowattHours(8000.0)
		XCTAssertEqual(2.222222, result, accuracy: 0.01)
	}

	func testConvertKnownKilojoulesTokilowattHours_2() throws {
		let result = Energy.Kilojoules.tokilowattHours(67.99)
		XCTAssertEqual(0.018886111, result, accuracy: 0.01)
	}

	func testConvertKnownKilojoulesTokilowattHours_3() throws {
		let result = Energy.Kilojoules.tokilowattHours(406.8)
		XCTAssertEqual(0.113, result, accuracy: 0.01)
	}

	func testConvertKnownKilojoulesTofootPounds_1() throws {
		let result = Energy.Kilojoules.tofootPounds(100.9)
		XCTAssertEqual(74420.00579, result, accuracy: 0.01)
	}

	func testConvertKnownKilojoulesTofootPounds_2() throws {
		let result = Energy.Kilojoules.tofootPounds(2.4)
		XCTAssertEqual(1770.15, result, accuracy: 0.01)
	}

	func testConvertKnownKilojoulesTofootPounds_3() throws {
		let result = Energy.Kilojoules.tofootPounds(0.9)
		XCTAssertEqual(663.806, result, accuracy: 0.01)
	}

	func testConvertKnownKilojoulesToelectronvolts_1() throws {
		let result = Energy.Kilojoules.toelectronvolts(0.000000999)
		XCTAssertEqual(6235268234766989.0, result, accuracy: 0.01)
	}

	func testConvertKnownKilojoulesToelectronvolts_2() throws {
		let result = Energy.Kilojoules.toelectronvolts(0.0000002)
		XCTAssertEqual(1248301948902300.0, result, accuracy: 0.01)
	}

	func testConvertKnownKilojoulesToelectronvolts_3() throws {
		let result = Energy.Kilojoules.toelectronvolts(0.00567)
		XCTAssertEqual(3.5389360251380204E+19, result, accuracy: 0.01)
	}

}

final class KilowattHoursTests: XCTestCase {
	func testConvertKnownKilowattHoursTokilojoules_1() throws {
		let result = Energy.KilowattHours.tokilojoules(0.6)
		XCTAssertEqual(2160.0, result, accuracy: 0.01)
	}

	func testConvertKnownKilowattHoursTokilojoules_2() throws {
		let result = Energy.KilowattHours.tokilojoules(134.0)
		XCTAssertEqual(482400.0, result, accuracy: 0.01)
	}

	func testConvertKnownKilowattHoursTokilojoules_3() throws {
		let result = Energy.KilowattHours.tokilojoules(45.6)
		XCTAssertEqual(164160.0, result, accuracy: 0.01)
	}

	func testConvertKnownKilowattHoursTokilocalories_1() throws {
		let result = Energy.KilowattHours.tokilocalories(45.6)
		XCTAssertEqual(39235.1976, result, accuracy: 0.01)
	}

	func testConvertKnownKilowattHoursTokilocalories_2() throws {
		let result = Energy.KilowattHours.tokilocalories(12.0)
		XCTAssertEqual(10325.052, result, accuracy: 0.01)
	}

	func testConvertKnownKilowattHoursTokilocalories_3() throws {
		let result = Energy.KilowattHours.tokilocalories(0.4)
		XCTAssertEqual(344.168, result, accuracy: 0.01)
	}

	func testConvertKnownKilowattHoursTojoules_1() throws {
		let result = Energy.KilowattHours.tojoules(0.01)
		XCTAssertEqual(36000.0, result, accuracy: 0.01)
	}

	func testConvertKnownKilowattHoursTojoules_2() throws {
		let result = Energy.KilowattHours.tojoules(0.009)
		XCTAssertEqual(32400.0, result, accuracy: 0.01)
	}

	func testConvertKnownKilowattHoursTojoules_3() throws {
		let result = Energy.KilowattHours.tojoules(2.0)
		XCTAssertEqual(7.2e+6, result, accuracy: 0.01)
	}

	func testConvertKnownKilowattHoursTobtu_1() throws {
		let result = Energy.KilowattHours.tobtu(2.0)
		XCTAssertEqual(6824.28, result, accuracy: 0.01)
	}

	func testConvertKnownKilowattHoursTobtu_2() throws {
		let result = Energy.KilowattHours.tobtu(0.7)
		XCTAssertEqual(2388.4979, result, accuracy: 0.01)
	}

	func testConvertKnownKilowattHoursTobtu_3() throws {
		let result = Energy.KilowattHours.tobtu(0.02)
		XCTAssertEqual(68.24283, result, accuracy: 0.01)
	}

	func testConvertKnownKilowattHoursTocalories_1() throws {
		let result = Energy.KilowattHours.tocalories(0.1)
		XCTAssertEqual(86042.1, result, accuracy: 0.01)
	}

	func testConvertKnownKilowattHoursTocalories_2() throws {
		let result = Energy.KilowattHours.tocalories(0.07)
		XCTAssertEqual(60229.47, result, accuracy: 0.01)
	}

	func testConvertKnownKilowattHoursTocalories_3() throws {
		let result = Energy.KilowattHours.tocalories(0.0123)
		XCTAssertEqual(10583.174, result, accuracy: 0.01)
	}

	func testConvertKnownKilowattHoursTouSTherms_1() throws {
		let result = Energy.KilowattHours.touSTherms(5.0)
		XCTAssertEqual(0.170648, result, accuracy: 0.01)
	}

	func testConvertKnownKilowattHoursTouSTherms_2() throws {
		let result = Energy.KilowattHours.touSTherms(234.0)
		XCTAssertEqual(7.98632, result, accuracy: 0.01)
	}

	func testConvertKnownKilowattHoursTouSTherms_3() throws {
		let result = Energy.KilowattHours.touSTherms(1001.0)
		XCTAssertEqual(34.16369, result, accuracy: 0.01)
	}

	func testConvertKnownKilowattHoursTowattHours_1() throws {
		let result = Energy.KilowattHours.towattHours(123.0)
		XCTAssertEqual(123000.0, result, accuracy: 0.01)
	}

	func testConvertKnownKilowattHoursTowattHours_2() throws {
		let result = Energy.KilowattHours.towattHours(98.4)
		XCTAssertEqual(98400.0, result, accuracy: 0.01)
	}

	func testConvertKnownKilowattHoursTowattHours_3() throws {
		let result = Energy.KilowattHours.towattHours(1.6)
		XCTAssertEqual(1600.0, result, accuracy: 0.01)
	}

	func testConvertKnownKilowattHoursTofootPounds_1() throws {
		let result = Energy.KilowattHours.tofootPounds(0.001)
		XCTAssertEqual(2655.196219, result, accuracy: 0.01)
	}

	func testConvertKnownKilowattHoursTofootPounds_2() throws {
		let result = Energy.KilowattHours.tofootPounds(0.09)
		XCTAssertEqual(238967.6597, result, accuracy: 0.01)
	}

	func testConvertKnownKilowattHoursTofootPounds_3() throws {
		let result = Energy.KilowattHours.tofootPounds(0.0006)
		XCTAssertEqual(1593.1177314, result, accuracy: 0.01)
	}

	func testConvertKnownKilowattHoursToelectronvolts_1() throws {
		let result = Energy.KilowattHours.toelectronvolts(0.000008)
		XCTAssertEqual(179755440000000000000.0, result, accuracy: 0.01)
	}

	func testConvertKnownKilowattHoursToelectronvolts_2() throws {
		let result = Energy.KilowattHours.toelectronvolts(0.0000000128)
		XCTAssertEqual(2.8760870400000003E+17, result, accuracy: 0.01)
	}

	func testConvertKnownKilowattHoursToelectronvolts_3() throws {
		let result = Energy.KilowattHours.toelectronvolts(0.0000000001)
		XCTAssertEqual(2246943000000000.2, result, accuracy: 0.01)
	}

}

final class USThermsTests: XCTestCase {
	func testConvertKnownUSThermsTokilojoules_1() throws {
		let result = Energy.USTherms.tokilojoules(0.009)
		XCTAssertEqual(949.3236, result, accuracy: 0.01)
	}

	func testConvertKnownUSThermsTokilojoules_2() throws {
		let result = Energy.USTherms.tokilojoules(3.0)
		XCTAssertEqual(316440.12, result, accuracy: 0.01)
	}

	func testConvertKnownUSThermsTokilojoules_3() throws {
		let result = Energy.USTherms.tokilojoules(1.9)
		XCTAssertEqual(200412.075, result, accuracy: 0.01)
	}

	func testConvertKnownUSThermsTokilocalories_1() throws {
		let result = Energy.USTherms.tokilocalories(1.1)
		XCTAssertEqual(27731.484079398004, result, accuracy: 0.01)
	}

	func testConvertKnownUSThermsTokilocalories_2() throws {
		let result = Energy.USTherms.tokilocalories(0.04)
		XCTAssertEqual(1008.417, result, accuracy: 0.01)
	}

	func testConvertKnownUSThermsTokilocalories_3() throws {
		let result = Energy.USTherms.tokilocalories(0.0123)
		XCTAssertEqual(310.088174, result, accuracy: 0.01)
	}

	func testConvertKnownUSThermsTojoules_1() throws {
		let result = Energy.USTherms.tojoules(0.008)
		XCTAssertEqual(843843.2, result, accuracy: 0.01)
	}

	func testConvertKnownUSThermsTojoules_2() throws {
		let result = Energy.USTherms.tojoules(3.4e-6)
		XCTAssertEqual(358.633, result, accuracy: 0.01)
	}

	func testConvertKnownUSThermsTojoules_3() throws {
		let result = Energy.USTherms.tojoules(0.00678)
		XCTAssertEqual(715157.112, result, accuracy: 0.01)
	}

	func testConvertKnownUSThermsTobtu_1() throws {
		let result = Energy.USTherms.tobtu(0.00666)
		XCTAssertEqual(665.8409891, result, accuracy: 0.01)
	}

	func testConvertKnownUSThermsTobtu_2() throws {
		let result = Energy.USTherms.tobtu(2.0)
		XCTAssertEqual(199952.249, result, accuracy: 0.01)
	}

	func testConvertKnownUSThermsTobtu_3() throws {
		let result = Energy.USTherms.tobtu(0.9)
		XCTAssertEqual(89978.51204, result, accuracy: 0.01)
	}

	func testConvertKnownUSThermsTocalories_1() throws {
		let result = Energy.USTherms.tocalories(0.003)
		XCTAssertEqual(75631.262, result, accuracy: 0.01)
	}

	func testConvertKnownUSThermsTocalories_2() throws {
		let result = Energy.USTherms.tocalories(6.8e-3)
		XCTAssertEqual(171430.856, result, accuracy: 0.01)
	}

	func testConvertKnownUSThermsTocalories_3() throws {
		let result = Energy.USTherms.tocalories(0.0008)
		XCTAssertEqual(20168.3365, result, accuracy: 0.01)
	}

	func testConvertKnownUSThermsTowattHours_1() throws {
		let result = Energy.USTherms.towattHours(6.0)
		XCTAssertEqual(175800.59, result, accuracy: 0.01)
	}

	func testConvertKnownUSThermsTowattHours_2() throws {
		let result = Energy.USTherms.towattHours(1.9)
		XCTAssertEqual(55670.189, result, accuracy: 0.01)
	}

	func testConvertKnownUSThermsTowattHours_3() throws {
		let result = Energy.USTherms.towattHours(0.07)
		XCTAssertEqual(2051.008, result, accuracy: 0.01)
	}

	func testConvertKnownUSThermsTokilowattHours_1() throws {
		let result = Energy.USTherms.tokilowattHours(0.9)
		XCTAssertEqual(26.3701, result, accuracy: 0.01)
	}

	func testConvertKnownUSThermsTokilowattHours_2() throws {
		let result = Energy.USTherms.tokilowattHours(7.9)
		XCTAssertEqual(231.471, result, accuracy: 0.01)
	}

	func testConvertKnownUSThermsTokilowattHours_3() throws {
		let result = Energy.USTherms.tokilowattHours(1.4)
		XCTAssertEqual(41.0202, result, accuracy: 0.01)
	}

	func testConvertKnownUSThermsTofootPounds_1() throws {
		let result = Energy.USTherms.tofootPounds(0.009)
		XCTAssertEqual(700352.43389267, result, accuracy: 0.01)
	}

	func testConvertKnownUSThermsTofootPounds_2() throws {
		let result = Energy.USTherms.tofootPounds(0.02)
		XCTAssertEqual(1556338.74198, result, accuracy: 0.01)
	}

	func testConvertKnownUSThermsTofootPounds_3() throws {
		let result = Energy.USTherms.tofootPounds(0.0003)
		XCTAssertEqual(23345.081129, result, accuracy: 0.01)
	}

	func testConvertKnownUSThermsToelectronvolts_1() throws {
		let result = Energy.USTherms.toelectronvolts(0.0000009)
		XCTAssertEqual(592520940098199000000.0, result, accuracy: 0.01)
	}

	func testConvertKnownUSThermsToelectronvolts_2() throws {
		let result = Energy.USTherms.toelectronvolts(0.000000001339)
		XCTAssertEqual(8.815394875460983E+17, result, accuracy: 0.01)
	}

	func testConvertKnownUSThermsToelectronvolts_3() throws {
		let result = Energy.USTherms.toelectronvolts(0.0000000000666)
		XCTAssertEqual(43846549567266728.0, result, accuracy: 0.01)
	}

}

final class WattHoursTests: XCTestCase {
	func testConvertKnownWattHoursTokilojoules_1() throws {
		let result = Energy.WattHours.tokilojoules(1.6)
		XCTAssertEqual(5.76, result, accuracy: 0.01)
	}

	func testConvertKnownWattHoursTokilojoules_2() throws {
		let result = Energy.WattHours.tokilojoules(67.0)
		XCTAssertEqual(241.2, result, accuracy: 0.01)
	}

	func testConvertKnownWattHoursTokilojoules_3() throws {
		let result = Energy.WattHours.tokilojoules(8.12)
		XCTAssertEqual(29.232, result, accuracy: 0.01)
	}

	func testConvertKnownWattHoursTokilocalories_1() throws {
		let result = Energy.WattHours.tokilocalories(8.12)
		XCTAssertEqual(6.986616, result, accuracy: 0.01)
	}

	func testConvertKnownWattHoursTokilocalories_2() throws {
		let result = Energy.WattHours.tokilocalories(170.0)
		XCTAssertEqual(146.272, result, accuracy: 0.01)
	}

	func testConvertKnownWattHoursTokilocalories_3() throws {
		let result = Energy.WattHours.tokilocalories(19.2)
		XCTAssertEqual(16.52008, result, accuracy: 0.01)
	}

	func testConvertKnownWattHoursTojoules_1() throws {
		let result = Energy.WattHours.tojoules(6.7)
		XCTAssertEqual(24120.0, result, accuracy: 0.01)
	}

	func testConvertKnownWattHoursTojoules_2() throws {
		let result = Energy.WattHours.tojoules(12.34)
		XCTAssertEqual(44424.0, result, accuracy: 0.01)
	}

	func testConvertKnownWattHoursTojoules_3() throws {
		let result = Energy.WattHours.tojoules(0.09)
		XCTAssertEqual(324.0, result, accuracy: 0.01)
	}

	func testConvertKnownWattHoursTobtu_1() throws {
		let result = Energy.WattHours.tobtu(34.0)
		XCTAssertEqual(116.013, result, accuracy: 0.01)
	}

	func testConvertKnownWattHoursTobtu_2() throws {
		let result = Energy.WattHours.tobtu(179.2)
		XCTAssertEqual(611.45578, result, accuracy: 0.01)
	}

	func testConvertKnownWattHoursTobtu_3() throws {
		let result = Energy.WattHours.tobtu(0.9)
		XCTAssertEqual(3.07093, result, accuracy: 0.01)
	}

	func testConvertKnownWattHoursTocalories_1() throws {
		let result = Energy.WattHours.tocalories(0.2)
		XCTAssertEqual(172.084, result, accuracy: 0.01)
	}

	func testConvertKnownWattHoursTocalories_2() throws {
		let result = Energy.WattHours.tocalories(0.09)
		XCTAssertEqual(77.43786, result, accuracy: 0.01)
	}

	func testConvertKnownWattHoursTocalories_3() throws {
		let result = Energy.WattHours.tocalories(12.0)
		XCTAssertEqual(10325.06754, result, accuracy: 0.01)
	}

	func testConvertKnownWattHoursTouSTherms_1() throws {
		let result = Energy.WattHours.touSTherms(1090.0)
		XCTAssertEqual(0.03720122, result, accuracy: 0.01)
	}

	func testConvertKnownWattHoursTouSTherms_2() throws {
		let result = Energy.WattHours.touSTherms(49990.0)
		XCTAssertEqual(1.7061369, result, accuracy: 0.01)
	}

	func testConvertKnownWattHoursTouSTherms_3() throws {
		let result = Energy.WattHours.touSTherms(900800.0)
		XCTAssertEqual(30.7439107, result, accuracy: 0.01)
	}

	func testConvertKnownWattHoursTokilowattHours_1() throws {
		let result = Energy.WattHours.tokilowattHours(98.0)
		XCTAssertEqual(0.098, result, accuracy: 0.01)
	}

	func testConvertKnownWattHoursTokilowattHours_2() throws {
		let result = Energy.WattHours.tokilowattHours(12.5)
		XCTAssertEqual(0.0125, result, accuracy: 0.01)
	}

	func testConvertKnownWattHoursTokilowattHours_3() throws {
		let result = Energy.WattHours.tokilowattHours(0.6)
		XCTAssertEqual(0.0006, result, accuracy: 0.01)
	}

	func testConvertKnownWattHoursTofootPounds_1() throws {
		let result = Energy.WattHours.tofootPounds(1.5)
		XCTAssertEqual(3982.829, result, accuracy: 0.01)
	}

	func testConvertKnownWattHoursTofootPounds_2() throws {
		let result = Energy.WattHours.tofootPounds(0.3)
		XCTAssertEqual(796.567, result, accuracy: 0.01)
	}

	func testConvertKnownWattHoursTofootPounds_3() throws {
		let result = Energy.WattHours.tofootPounds(90.1)
		XCTAssertEqual(239235.3219, result, accuracy: 0.01)
	}

	func testConvertKnownWattHoursToelectronvolts_1() throws {
		let result = Energy.WattHours.toelectronvolts(0.0000000000666)
		XCTAssertEqual(1496463565615.39, result, accuracy: 0.01)
	}

	func testConvertKnownWattHoursToelectronvolts_2() throws {
		let result = Energy.WattHours.toelectronvolts(0.000000008)
		XCTAssertEqual(179755383257104.03, result, accuracy: 0.01)
	}

	func testConvertKnownWattHoursToelectronvolts_3() throws {
		let result = Energy.WattHours.toelectronvolts(0.0000123)
		XCTAssertEqual(2.7637390175779744E+17, result, accuracy: 0.01)
	}

}

