// <auto-generated>
// This code was generated by the UnitCodeGenerator tool
//
// Changes to this file will be lost if the code is regenerated
// </auto-generated>

import XCTest
@testable import SwiftUnits

final class BtuTests: XCTestCase {
	func testConvertKnownBtuToKilojoules_1() throws {
		let result = Energy.Btu.toKilojoules(100.0)
		XCTAssertEqual(105.506, result, accuracy: 0.01)
	}

	func testConvertKnownBtuToKilojoules_2() throws {
		let result = Energy.Btu.toKilojoules(987.65)
		XCTAssertEqual(1042.03, result, accuracy: 0.01)
	}

	func testConvertKnownBtuToKilojoules_3() throws {
		let result = Energy.Btu.toKilojoules(555666.0)
		XCTAssertEqual(586258.6917293, result, accuracy: 0.01)
	}

	func testConvertKnownBtuToKilocalories_1() throws {
		let result = Energy.Btu.toKilocalories(67.9)
		XCTAssertEqual(17.12196, result, accuracy: 0.01)
	}

	func testConvertKnownBtuToKilocalories_2() throws {
		let result = Energy.Btu.toKilocalories(109.9)
		XCTAssertEqual(27.712867639325825, result, accuracy: 0.01)
	}

	func testConvertKnownBtuToKilocalories_3() throws {
		let result = Energy.Btu.toKilocalories(5000.0)
		XCTAssertEqual(1260.8220036090, result, accuracy: 0.01)
	}

	func testConvertKnownBtuToJoules_1() throws {
		let result = Energy.Btu.toJoules(5.0)
		XCTAssertEqual(5275.3, result, accuracy: 0.01)
	}

	func testConvertKnownBtuToJoules_2() throws {
		let result = Energy.Btu.toJoules(912.9)
		XCTAssertEqual(963164.274, result, accuracy: 0.01)
	}

	func testConvertKnownBtuToJoules_3() throws {
		let result = Energy.Btu.toJoules(109.0)
		XCTAssertEqual(115001.54, result, accuracy: 0.01)
	}

	func testConvertKnownBtuToCalories_1() throws {
		let result = Energy.Btu.toCalories(56.0)
		XCTAssertEqual(14121.20644042079, result, accuracy: 0.01)
	}

	func testConvertKnownBtuToCalories_2() throws {
		let result = Energy.Btu.toCalories(123.0)
		XCTAssertEqual(31016.221288781402, result, accuracy: 0.01)
	}

	func testConvertKnownBtuToCalories_3() throws {
		let result = Energy.Btu.toCalories(0.9)
		XCTAssertEqual(226.9476, result, accuracy: 0.01)
	}

	func testConvertKnownBtuToUSTherms_1() throws {
		let result = Energy.Btu.toUSTherms(12000.0)
		XCTAssertEqual(0.120028657, result, accuracy: 0.01)
	}

	func testConvertKnownBtuToUSTherms_2() throws {
		let result = Energy.Btu.toUSTherms(9876.5)
		XCTAssertEqual(0.098788586, result, accuracy: 0.01)
	}

	func testConvertKnownBtuToUSTherms_3() throws {
		let result = Energy.Btu.toUSTherms(666.999)
		XCTAssertEqual(0.006671583, result, accuracy: 0.01)
	}

	func testConvertKnownBtuToWattHours_1() throws {
		let result = Energy.Btu.toWattHours(900.0)
		XCTAssertEqual(263.764, result, accuracy: 0.01)
	}

	func testConvertKnownBtuToWattHours_2() throws {
		let result = Energy.Btu.toWattHours(125.7)
		XCTAssertEqual(36.839034, result, accuracy: 0.01)
	}

	func testConvertKnownBtuToWattHours_3() throws {
		let result = Energy.Btu.toWattHours(0.99)
		XCTAssertEqual(0.2901404, result, accuracy: 0.01)
	}

	func testConvertKnownBtuToKilowattHours_1() throws {
		let result = Energy.Btu.toKilowattHours(9000.0)
		XCTAssertEqual(2.63764, result, accuracy: 0.01)
	}

	func testConvertKnownBtuToKilowattHours_2() throws {
		let result = Energy.Btu.toKilowattHours(12345.0)
		XCTAssertEqual(3.6179624, result, accuracy: 0.01)
	}

	func testConvertKnownBtuToKilowattHours_3() throws {
		let result = Energy.Btu.toKilowattHours(8090.8)
		XCTAssertEqual(2.37117941, result, accuracy: 0.01)
	}

	func testConvertKnownBtuToFootPounds_1() throws {
		let result = Energy.Btu.toFootPounds(189.0)
		XCTAssertEqual(147073.9409, result, accuracy: 0.01)
	}

	func testConvertKnownBtuToFootPounds_2() throws {
		let result = Energy.Btu.toFootPounds(0.3)
		XCTAssertEqual(233.451, result, accuracy: 0.01)
	}

	func testConvertKnownBtuToFootPounds_3() throws {
		let result = Energy.Btu.toFootPounds(2.6)
		XCTAssertEqual(2023.24, result, accuracy: 0.01)
	}

	func testConvertKnownBtuToElectronvolts_1() throws {
		let result = Energy.Btu.toElectronvolts(0.0000000789)
		XCTAssertEqual(519567655294184.88, result, accuracy: 0.01)
	}

	func testConvertKnownBtuToElectronvolts_2() throws {
		let result = Energy.Btu.toElectronvolts(0.000001002)
		XCTAssertEqual(6598311667994592.0, result, accuracy: 0.01)
	}

	func testConvertKnownBtuToElectronvolts_3() throws {
		let result = Energy.Btu.toElectronvolts(0.000000001)
		XCTAssertEqual(6585141385224.14, result, accuracy: 0.01)
	}

}

final class CaloriesTests: XCTestCase {
	func testConvertKnownCaloriesToKilojoules_1() throws {
		let result = Energy.Calories.toKilojoules(109.0)
		XCTAssertEqual(0.456056, result, accuracy: 0.01)
	}

	func testConvertKnownCaloriesToKilojoules_2() throws {
		let result = Energy.Calories.toKilojoules(12.3)
		XCTAssertEqual(0.0514632, result, accuracy: 0.01)
	}

	func testConvertKnownCaloriesToKilojoules_3() throws {
		let result = Energy.Calories.toKilojoules(9876.0)
		XCTAssertEqual(41.32118, result, accuracy: 0.01)
	}

	func testConvertKnownCaloriesToKilocalories_1() throws {
		let result = Energy.Calories.toKilocalories(900.0)
		XCTAssertEqual(0.9, result, accuracy: 0.01)
	}

	func testConvertKnownCaloriesToKilocalories_2() throws {
		let result = Energy.Calories.toKilocalories(1782.0)
		XCTAssertEqual(1.782, result, accuracy: 0.01)
	}

	func testConvertKnownCaloriesToKilocalories_3() throws {
		let result = Energy.Calories.toKilocalories(900800.0)
		XCTAssertEqual(900.8, result, accuracy: 0.01)
	}

	func testConvertKnownCaloriesToJoules_1() throws {
		let result = Energy.Calories.toJoules(98.0)
		XCTAssertEqual(410.032, result, accuracy: 0.01)
	}

	func testConvertKnownCaloriesToJoules_2() throws {
		let result = Energy.Calories.toJoules(1.67)
		XCTAssertEqual(6.98728, result, accuracy: 0.01)
	}

	func testConvertKnownCaloriesToJoules_3() throws {
		let result = Energy.Calories.toJoules(55.0)
		XCTAssertEqual(230.12, result, accuracy: 0.01)
	}

	func testConvertKnownCaloriesToBtu_1() throws {
		let result = Energy.Calories.toBtu(550.0)
		XCTAssertEqual(2.18112, result, accuracy: 0.01)
	}

	func testConvertKnownCaloriesToBtu_2() throws {
		let result = Energy.Calories.toBtu(1234.0)
		XCTAssertEqual(4.893633, result, accuracy: 0.01)
	}

	func testConvertKnownCaloriesToBtu_3() throws {
		let result = Energy.Calories.toBtu(900.9)
		XCTAssertEqual(3.5726692, result, accuracy: 0.01)
	}

	func testConvertKnownCaloriesToUSTherms_1() throws {
		let result = Energy.Calories.toUSTherms(9000000.0)
		XCTAssertEqual(0.356995242, result, accuracy: 0.01)
	}

	func testConvertKnownCaloriesToUSTherms_2() throws {
		let result = Energy.Calories.toUSTherms(12e6)
		XCTAssertEqual(0.475993657, result, accuracy: 0.01)
	}

	func testConvertKnownCaloriesToUSTherms_3() throws {
		let result = Energy.Calories.toUSTherms(100200300.0)
		XCTAssertEqual(3.974558932, result, accuracy: 0.01)
	}

	func testConvertKnownCaloriesToWattHours_1() throws {
		let result = Energy.Calories.toWattHours(600.0)
		XCTAssertEqual(0.697333, result, accuracy: 0.01)
	}

	func testConvertKnownCaloriesToWattHours_2() throws {
		let result = Energy.Calories.toWattHours(1234.5)
		XCTAssertEqual(1.43476333, result, accuracy: 0.01)
	}

	func testConvertKnownCaloriesToWattHours_3() throws {
		let result = Energy.Calories.toWattHours(88.7)
		XCTAssertEqual(0.1030891, result, accuracy: 0.01)
	}

	func testConvertKnownCaloriesToKilowattHours_1() throws {
		let result = Energy.Calories.toKilowattHours(100900.0)
		XCTAssertEqual(0.117268222, result, accuracy: 0.01)
	}

	func testConvertKnownCaloriesToKilowattHours_2() throws {
		let result = Energy.Calories.toKilowattHours(987654.0)
		XCTAssertEqual(1.14787343, result, accuracy: 0.01)
	}

	func testConvertKnownCaloriesToKilowattHours_3() throws {
		let result = Energy.Calories.toKilowattHours(506012.0)
		XCTAssertEqual(0.588098391, result, accuracy: 0.01)
	}

	func testConvertKnownCaloriesToFootPounds_1() throws {
		let result = Energy.Calories.toFootPounds(123.0)
		XCTAssertEqual(379.573, result, accuracy: 0.01)
	}

	func testConvertKnownCaloriesToFootPounds_2() throws {
		let result = Energy.Calories.toFootPounds(9.01)
		XCTAssertEqual(27.8045, result, accuracy: 0.01)
	}

	func testConvertKnownCaloriesToFootPounds_3() throws {
		let result = Energy.Calories.toFootPounds(2.8)
		XCTAssertEqual(8.64069, result, accuracy: 0.01)
	}

	func testConvertKnownCaloriesToElectronvolts_1() throws {
		let result = Energy.Calories.toElectronvolts(0.0000091)
		XCTAssertEqual(237800626261534.66, result, accuracy: 0.01)
	}

	func testConvertKnownCaloriesToElectronvolts_2() throws {
		let result = Energy.Calories.toElectronvolts(0.0008)
		XCTAssertEqual(20905549561453600.0, result, accuracy: 0.01)
	}

	func testConvertKnownCaloriesToElectronvolts_3() throws {
		let result = Energy.Calories.toElectronvolts(0.00123)
		XCTAssertEqual(32142282450734908.0, result, accuracy: 0.01)
	}

}

final class ElectronvoltsTests: XCTestCase {
	func testConvertKnownElectronvoltsToKilojoules_1() throws {
		let result = Energy.Electronvolts.toKilojoules(123456789.0)
		XCTAssertEqual(1.9779957413e-14, result, accuracy: 0.01)
	}

	func testConvertKnownElectronvoltsToKilojoules_2() throws {
		let result = Energy.Electronvolts.toKilojoules(900900900.0)
		XCTAssertEqual(1.4434023094e-13, result, accuracy: 0.01)
	}

	func testConvertKnownElectronvoltsToKilojoules_3() throws {
		let result = Energy.Electronvolts.toKilojoules(123456789123456789.0)
		XCTAssertEqual(1.977995743237493669e-5, result, accuracy: 0.01)
	}

	func testConvertKnownElectronvoltsToKilocalories_1() throws {
		let result = Energy.Electronvolts.toKilocalories(100200300400.0)
		XCTAssertEqual(1.6053857310684e-11, result, accuracy: 0.01)
	}

	func testConvertKnownElectronvoltsToKilocalories_2() throws {
		let result = Energy.Electronvolts.toKilocalories(123456789.0)
		XCTAssertEqual(1.9779957413e-14, result, accuracy: 0.01)
	}

	func testConvertKnownElectronvoltsToKilocalories_3() throws {
		let result = Energy.Electronvolts.toKilocalories(900800700600.0)
		XCTAssertEqual(1.4432417722369e-10, result, accuracy: 0.01)
	}

	func testConvertKnownElectronvoltsToJoules_1() throws {
		let result = Energy.Electronvolts.toJoules(123456789123.0)
		XCTAssertEqual(1.9779957432302e-8, result, accuracy: 0.01)
	}

	func testConvertKnownElectronvoltsToJoules_2() throws {
		let result = Energy.Electronvolts.toJoules(900800700600.0)
		XCTAssertEqual(1.4432417722369e-7, result, accuracy: 0.01)
	}

	func testConvertKnownElectronvoltsToJoules_3() throws {
		let result = Energy.Electronvolts.toJoules(999888777666.0)
		XCTAssertEqual(1.601998367183e-7, result, accuracy: 0.01)
	}

	func testConvertKnownElectronvoltsToBtu_1() throws {
		let result = Energy.Electronvolts.toBtu(100020003000100020003000.0)
		XCTAssertEqual(15.188741377060267723, result, accuracy: 0.01)
	}

	func testConvertKnownElectronvoltsToBtu_2() throws {
		let result = Energy.Electronvolts.toBtu(999888777666999888777666.0)
		XCTAssertEqual(151.84014791315084381, result, accuracy: 0.01)
	}

	func testConvertKnownElectronvoltsToBtu_3() throws {
		let result = Energy.Electronvolts.toBtu(12345678912341234567891234.0)
		XCTAssertEqual(1874.7782293466862029, result, accuracy: 0.01)
	}

	func testConvertKnownElectronvoltsToCalories_1() throws {
		let result = Energy.Electronvolts.toCalories(666333111999.0)
		XCTAssertEqual(2.5515853167503e-8, result, accuracy: 0.01)
	}

	func testConvertKnownElectronvoltsToCalories_2() throws {
		let result = Energy.Electronvolts.toCalories(999888777666555.0)
		XCTAssertEqual(3.8288679904011702e-5, result, accuracy: 0.01)
	}

	func testConvertKnownElectronvoltsToCalories_3() throws {
		let result = Energy.Electronvolts.toCalories(12345678901234.0)
		XCTAssertEqual(4.727523282641506e-7, result, accuracy: 0.01)
	}

	func testConvertKnownElectronvoltsToUSTherms_1() throws {
		let result = Energy.Electronvolts.toUSTherms(666333111999.0)
		XCTAssertEqual(1.0118737258101e-10, result, accuracy: 0.01)
	}

	func testConvertKnownElectronvoltsToUSTherms_2() throws {
		let result = Energy.Electronvolts.toUSTherms(999888777666555.0)
		XCTAssertEqual(1.5184014791308327e-7, result, accuracy: 0.01)
	}

	func testConvertKnownElectronvoltsToUSTherms_3() throws {
		let result = Energy.Electronvolts.toUSTherms(12345678901234.0)
		XCTAssertEqual(1.874778227659974e-9, result, accuracy: 0.01)
	}

	func testConvertKnownElectronvoltsToWattHours_1() throws {
		let result = Energy.Electronvolts.toWattHours(100900700100.0)
		XCTAssertEqual(4.490576030342e-12, result, accuracy: 0.01)
	}

	func testConvertKnownElectronvoltsToWattHours_2() throws {
		let result = Energy.Electronvolts.toWattHours(9000800070006000.0)
		XCTAssertEqual(4.00579748289276988e-7, result, accuracy: 0.01)
	}

	func testConvertKnownElectronvoltsToWattHours_3() throws {
		let result = Energy.Electronvolts.toWattHours(12345678987654321.0)
		XCTAssertEqual(5.494432653620188248e-7, result, accuracy: 0.01)
	}

	func testConvertKnownElectronvoltsToKilowattHours_1() throws {
		let result = Energy.Electronvolts.toKilowattHours(100900700100.0)
		XCTAssertEqual(4.490576030342e-15, result, accuracy: 0.01)
	}

	func testConvertKnownElectronvoltsToKilowattHours_2() throws {
		let result = Energy.Electronvolts.toKilowattHours(999988887777.0)
		XCTAssertEqual(4.4504410034909e-14, result, accuracy: 0.01)
	}

	func testConvertKnownElectronvoltsToKilowattHours_3() throws {
		let result = Energy.Electronvolts.toKilowattHours(12345678987654321.0)
		XCTAssertEqual(5.494432653620187834e-10, result, accuracy: 0.01)
	}

	func testConvertKnownElectronvoltsToFootPounds_1() throws {
		let result = Energy.Electronvolts.toFootPounds(100900700100.0)
		XCTAssertEqual(1.1923484070355e-8, result, accuracy: 0.01)
	}

	func testConvertKnownElectronvoltsToFootPounds_2() throws {
		let result = Energy.Electronvolts.toFootPounds(999988887777.0)
		XCTAssertEqual(1.1816916594359e-7, result, accuracy: 0.01)
	}

	func testConvertKnownElectronvoltsToFootPounds_3() throws {
		let result = Energy.Electronvolts.toFootPounds(12345678987654321.0)
		XCTAssertEqual(0.0014588948005427860004, result, accuracy: 0.01)
	}

}

final class FootPoundsTests: XCTestCase {
	func testConvertKnownFootPoundsToKilojoules_1() throws {
		let result = Energy.FootPounds.toKilojoules(190.0)
		XCTAssertEqual(0.257605, result, accuracy: 0.01)
	}

	func testConvertKnownFootPoundsToKilojoules_2() throws {
		let result = Energy.FootPounds.toKilojoules(4.6)
		XCTAssertEqual(0.00623676, result, accuracy: 0.01)
	}

	func testConvertKnownFootPoundsToKilojoules_3() throws {
		let result = Energy.FootPounds.toKilojoules(123.8)
		XCTAssertEqual(0.16785026, result, accuracy: 0.01)
	}

	func testConvertKnownFootPoundsToKilocalories_1() throws {
		let result = Energy.FootPounds.toKilocalories(1999.0)
		XCTAssertEqual(0.6477725, result, accuracy: 0.01)
	}

	func testConvertKnownFootPoundsToKilocalories_2() throws {
		let result = Energy.FootPounds.toKilocalories(890.8)
		XCTAssertEqual(0.2886622, result, accuracy: 0.01)
	}

	func testConvertKnownFootPoundsToKilocalories_3() throws {
		let result = Energy.FootPounds.toKilocalories(12000.0)
		XCTAssertEqual(3.8885792, result, accuracy: 0.01)
	}

	func testConvertKnownFootPoundsToJoules_1() throws {
		let result = Energy.FootPounds.toJoules(190.0)
		XCTAssertEqual(257.605, result, accuracy: 0.01)
	}

	func testConvertKnownFootPoundsToJoules_2() throws {
		let result = Energy.FootPounds.toJoules(23.4)
		XCTAssertEqual(31.72614, result, accuracy: 0.01)
	}

	func testConvertKnownFootPoundsToJoules_3() throws {
		let result = Energy.FootPounds.toJoules(9.2)
		XCTAssertEqual(12.4735, result, accuracy: 0.01)
	}

	func testConvertKnownFootPoundsToBtu_1() throws {
		let result = Energy.FootPounds.toBtu(9000.0)
		XCTAssertEqual(11.56561, result, accuracy: 0.01)
	}

	func testConvertKnownFootPoundsToBtu_2() throws {
		let result = Energy.FootPounds.toBtu(45.6)
		XCTAssertEqual(0.05859908, result, accuracy: 0.01)
	}

	func testConvertKnownFootPoundsToBtu_3() throws {
		let result = Energy.FootPounds.toBtu(1996.0)
		XCTAssertEqual(2.564995, result, accuracy: 0.01)
	}

	func testConvertKnownFootPoundsToCalories_1() throws {
		let result = Energy.FootPounds.toCalories(123.0)
		XCTAssertEqual(39.8579, result, accuracy: 0.01)
	}

	func testConvertKnownFootPoundsToCalories_2() throws {
		let result = Energy.FootPounds.toCalories(54.7)
		XCTAssertEqual(17.72544, result, accuracy: 0.01)
	}

	func testConvertKnownFootPoundsToCalories_3() throws {
		let result = Energy.FootPounds.toCalories(109.2)
		XCTAssertEqual(35.386071, result, accuracy: 0.01)
	}

	func testConvertKnownFootPoundsToUSTherms_1() throws {
		let result = Energy.FootPounds.toUSTherms(19000000.0)
		XCTAssertEqual(0.24422111613, result, accuracy: 0.01)
	}

	func testConvertKnownFootPoundsToUSTherms_2() throws {
		let result = Energy.FootPounds.toUSTherms(1234567.0)
		XCTAssertEqual(0.01586880688, result, accuracy: 0.01)
	}

	func testConvertKnownFootPoundsToUSTherms_3() throws {
		let result = Energy.FootPounds.toUSTherms(100200300.0)
		XCTAssertEqual(1.28794890016, result, accuracy: 0.01)
	}

	func testConvertKnownFootPoundsToWattHours_1() throws {
		let result = Energy.FootPounds.toWattHours(44.0)
		XCTAssertEqual(0.0165711, result, accuracy: 0.01)
	}

	func testConvertKnownFootPoundsToWattHours_2() throws {
		let result = Energy.FootPounds.toWattHours(9080.0)
		XCTAssertEqual(3.419674, result, accuracy: 0.01)
	}

	func testConvertKnownFootPoundsToWattHours_3() throws {
		let result = Energy.FootPounds.toWattHours(1200.0)
		XCTAssertEqual(0.4519393, result, accuracy: 0.01)
	}

	func testConvertKnownFootPoundsToKilowattHours_1() throws {
		let result = Energy.FootPounds.toKilowattHours(900000.0)
		XCTAssertEqual(0.338954487, result, accuracy: 0.01)
	}

	func testConvertKnownFootPoundsToKilowattHours_2() throws {
		let result = Energy.FootPounds.toKilowattHours(100200.0)
		XCTAssertEqual(0.0377369329, result, accuracy: 0.01)
	}

	func testConvertKnownFootPoundsToKilowattHours_3() throws {
		let result = Energy.FootPounds.toKilowattHours(9876543.0)
		XCTAssertEqual(3.719665074, result, accuracy: 0.01)
	}

	func testConvertKnownFootPoundsToElectronvolts_1() throws {
		let result = Energy.FootPounds.toElectronvolts(0.00123)
		XCTAssertEqual(10408691651641586.0, result, accuracy: 0.01)
	}

	func testConvertKnownFootPoundsToElectronvolts_2() throws {
		let result = Energy.FootPounds.toElectronvolts(0.0009)
		XCTAssertEqual(7616115842664575.0, result, accuracy: 0.01)
	}

	func testConvertKnownFootPoundsToElectronvolts_3() throws {
		let result = Energy.FootPounds.toElectronvolts(0.00000888)
		XCTAssertEqual(75145676314290.469, result, accuracy: 0.01)
	}

}

final class JoulesTests: XCTestCase {
	func testConvertKnownJoulesToKilojoules_1() throws {
		let result = Energy.Joules.toKilojoules(790.0)
		XCTAssertEqual(0.79, result, accuracy: 0.01)
	}

	func testConvertKnownJoulesToKilojoules_2() throws {
		let result = Energy.Joules.toKilojoules(800100.0)
		XCTAssertEqual(800.1, result, accuracy: 0.01)
	}

	func testConvertKnownJoulesToKilojoules_3() throws {
		let result = Energy.Joules.toKilojoules(509.2)
		XCTAssertEqual(0.5092, result, accuracy: 0.01)
	}

	func testConvertKnownJoulesToKilocalories_1() throws {
		let result = Energy.Joules.toKilocalories(790.0)
		XCTAssertEqual(0.188815, result, accuracy: 0.01)
	}

	func testConvertKnownJoulesToKilocalories_2() throws {
		let result = Energy.Joules.toKilocalories(125.9)
		XCTAssertEqual(0.030090822, result, accuracy: 0.01)
	}

	func testConvertKnownJoulesToKilocalories_3() throws {
		let result = Energy.Joules.toKilocalories(8000.0)
		XCTAssertEqual(1.912046, result, accuracy: 0.01)
	}

	func testConvertKnownJoulesToBtu_1() throws {
		let result = Energy.Joules.toBtu(500.0)
		XCTAssertEqual(0.473909, result, accuracy: 0.01)
	}

	func testConvertKnownJoulesToBtu_2() throws {
		let result = Energy.Joules.toBtu(1910.0)
		XCTAssertEqual(1.810331, result, accuracy: 0.01)
	}

	func testConvertKnownJoulesToBtu_3() throws {
		let result = Energy.Joules.toBtu(67000.1)
		XCTAssertEqual(63.50384184, result, accuracy: 0.01)
	}

	func testConvertKnownJoulesToCalories_1() throws {
		let result = Energy.Joules.toCalories(67.0)
		XCTAssertEqual(16.0134, result, accuracy: 0.01)
	}

	func testConvertKnownJoulesToCalories_2() throws {
		let result = Energy.Joules.toCalories(909.0)
		XCTAssertEqual(217.256, result, accuracy: 0.01)
	}

	func testConvertKnownJoulesToCalories_3() throws {
		let result = Energy.Joules.toCalories(190.0)
		XCTAssertEqual(45.4111, result, accuracy: 0.01)
	}

	func testConvertKnownJoulesToUSTherms_1() throws {
		let result = Energy.Joules.toUSTherms(100090000.0)
		XCTAssertEqual(0.948896667059, result, accuracy: 0.01)
	}

	func testConvertKnownJoulesToUSTherms_2() throws {
		let result = Energy.Joules.toUSTherms(55.7e6)
		XCTAssertEqual(0.52806018938, result, accuracy: 0.01)
	}

	func testConvertKnownJoulesToUSTherms_3() throws {
		let result = Energy.Joules.toUSTherms(1234567890.0)
		XCTAssertEqual(11.70423974501, result, accuracy: 0.01)
	}

	func testConvertKnownJoulesToWattHours_1() throws {
		let result = Energy.Joules.toWattHours(56000.0)
		XCTAssertEqual(15.555556, result, accuracy: 0.01)
	}

	func testConvertKnownJoulesToWattHours_2() throws {
		let result = Energy.Joules.toWattHours(890.0)
		XCTAssertEqual(0.247222, result, accuracy: 0.01)
	}

	func testConvertKnownJoulesToWattHours_3() throws {
		let result = Energy.Joules.toWattHours(22001.0)
		XCTAssertEqual(6.1113889, result, accuracy: 0.01)
	}

	func testConvertKnownJoulesToKilowattHours_1() throws {
		let result = Energy.Joules.toKilowattHours(560000.8)
		XCTAssertEqual(0.1555557, result, accuracy: 0.01)
	}

	func testConvertKnownJoulesToKilowattHours_2() throws {
		let result = Energy.Joules.toKilowattHours(1234567.0)
		XCTAssertEqual(0.3429352778, result, accuracy: 0.01)
	}

	func testConvertKnownJoulesToKilowattHours_3() throws {
		let result = Energy.Joules.toKilowattHours(900100.0)
		XCTAssertEqual(0.250027778, result, accuracy: 0.01)
	}

	func testConvertKnownJoulesToFootPounds_1() throws {
		let result = Energy.Joules.toFootPounds(900.0)
		XCTAssertEqual(663.806, result, accuracy: 0.01)
	}

	func testConvertKnownJoulesToFootPounds_2() throws {
		let result = Energy.Joules.toFootPounds(10.2)
		XCTAssertEqual(7.523134, result, accuracy: 0.01)
	}

	func testConvertKnownJoulesToFootPounds_3() throws {
		let result = Energy.Joules.toFootPounds(6.7)
		XCTAssertEqual(4.94167, result, accuracy: 0.01)
	}

	func testConvertKnownJoulesToElectronvolts_1() throws {
		let result = Energy.Joules.toElectronvolts(0.00000888)
		XCTAssertEqual(55424602968504.0, result, accuracy: 0.01)
	}

	func testConvertKnownJoulesToElectronvolts_2() throws {
		let result = Energy.Joules.toElectronvolts(0.00001234)
		XCTAssertEqual(77020225296322.0, result, accuracy: 0.01)
	}

	func testConvertKnownJoulesToElectronvolts_3() throws {
		let result = Energy.Joules.toElectronvolts(0.00000666)
		XCTAssertEqual(41568452226378.0, result, accuracy: 0.01)
	}

}

final class KilocaloriesTests: XCTestCase {
	func testConvertKnownKilocaloriesToKilojoules_1() throws {
		let result = Energy.Kilocalories.toKilojoules(67.0)
		XCTAssertEqual(280.328, result, accuracy: 0.01)
	}

	func testConvertKnownKilocaloriesToKilojoules_2() throws {
		let result = Energy.Kilocalories.toKilojoules(4.5)
		XCTAssertEqual(18.828, result, accuracy: 0.01)
	}

	func testConvertKnownKilocaloriesToKilojoules_3() throws {
		let result = Energy.Kilocalories.toKilojoules(100.3)
		XCTAssertEqual(419.6552, result, accuracy: 0.01)
	}

	func testConvertKnownKilocaloriesToJoules_1() throws {
		let result = Energy.Kilocalories.toJoules(100.3)
		XCTAssertEqual(419655.2, result, accuracy: 0.01)
	}

	func testConvertKnownKilocaloriesToJoules_2() throws {
		let result = Energy.Kilocalories.toJoules(0.9)
		XCTAssertEqual(3765.6, result, accuracy: 0.01)
	}

	func testConvertKnownKilocaloriesToJoules_3() throws {
		let result = Energy.Kilocalories.toJoules(3.4)
		XCTAssertEqual(14225.6, result, accuracy: 0.01)
	}

	func testConvertKnownKilocaloriesToBtu_1() throws {
		let result = Energy.Kilocalories.toBtu(3.4)
		XCTAssertEqual(13.4833, result, accuracy: 0.01)
	}

	func testConvertKnownKilocaloriesToBtu_2() throws {
		let result = Energy.Kilocalories.toBtu(109.0)
		XCTAssertEqual(432.2576846216055, result, accuracy: 0.01)
	}

	func testConvertKnownKilocaloriesToBtu_3() throws {
		let result = Energy.Kilocalories.toBtu(22.89)
		XCTAssertEqual(90.77411377053717, result, accuracy: 0.01)
	}

	func testConvertKnownKilocaloriesToCalories_1() throws {
		let result = Energy.Kilocalories.toCalories(22.8)
		XCTAssertEqual(22800.0, result, accuracy: 0.01)
	}

	func testConvertKnownKilocaloriesToCalories_2() throws {
		let result = Energy.Kilocalories.toCalories(76.23)
		XCTAssertEqual(76230.0, result, accuracy: 0.01)
	}

	func testConvertKnownKilocaloriesToCalories_3() throws {
		let result = Energy.Kilocalories.toCalories(0.07)
		XCTAssertEqual(70.0, result, accuracy: 0.01)
	}

	func testConvertKnownKilocaloriesToUSTherms_1() throws {
		let result = Energy.Kilocalories.toUSTherms(12345.0)
		XCTAssertEqual(0.4896388, result, accuracy: 0.01)
	}

	func testConvertKnownKilocaloriesToUSTherms_2() throws {
		let result = Energy.Kilocalories.toUSTherms(90002.0)
		XCTAssertEqual(3.5700317, result, accuracy: 0.01)
	}

	func testConvertKnownKilocaloriesToUSTherms_3() throws {
		let result = Energy.Kilocalories.toUSTherms(180180.0)
		XCTAssertEqual(7.14704457, result, accuracy: 0.01)
	}

	func testConvertKnownKilocaloriesToWattHours_1() throws {
		let result = Energy.Kilocalories.toWattHours(89.0)
		XCTAssertEqual(103.438, result, accuracy: 0.01)
	}

	func testConvertKnownKilocaloriesToWattHours_2() throws {
		let result = Energy.Kilocalories.toWattHours(23.6)
		XCTAssertEqual(27.42844, result, accuracy: 0.01)
	}

	func testConvertKnownKilocaloriesToWattHours_3() throws {
		let result = Energy.Kilocalories.toWattHours(0.9)
		XCTAssertEqual(1.046, result, accuracy: 0.01)
	}

	func testConvertKnownKilocaloriesToKilowattHours_1() throws {
		let result = Energy.Kilocalories.toKilowattHours(456.0)
		XCTAssertEqual(0.529973, result, accuracy: 0.01)
	}

	func testConvertKnownKilocaloriesToKilowattHours_2() throws {
		let result = Energy.Kilocalories.toKilowattHours(1090.8)
		XCTAssertEqual(1.267752, result, accuracy: 0.01)
	}

	func testConvertKnownKilocaloriesToKilowattHours_3() throws {
		let result = Energy.Kilocalories.toKilowattHours(567.1)
		XCTAssertEqual(0.65909622, result, accuracy: 0.01)
	}

	func testConvertKnownKilocaloriesToFootPounds_1() throws {
		let result = Energy.Kilocalories.toFootPounds(109.0)
		XCTAssertEqual(336369.64, result, accuracy: 0.01)
	}

	func testConvertKnownKilocaloriesToFootPounds_2() throws {
		let result = Energy.Kilocalories.toFootPounds(0.5)
		XCTAssertEqual(1542.98, result, accuracy: 0.01)
	}

	func testConvertKnownKilocaloriesToFootPounds_3() throws {
		let result = Energy.Kilocalories.toFootPounds(2.4)
		XCTAssertEqual(7406.3, result, accuracy: 0.01)
	}

	func testConvertKnownKilocaloriesToElectronvolts_1() throws {
		let result = Energy.Kilocalories.toElectronvolts(0.0000000666)
		XCTAssertEqual(1740388069688132.2, result, accuracy: 0.01)
	}

	func testConvertKnownKilocaloriesToElectronvolts_2() throws {
		let result = Energy.Kilocalories.toElectronvolts(0.000002)
		XCTAssertEqual(52263905996640608.0, result, accuracy: 0.01)
	}

	func testConvertKnownKilocaloriesToElectronvolts_3() throws {
		let result = Energy.Kilocalories.toElectronvolts(0.000000999)
		XCTAssertEqual(26105821045321988.0, result, accuracy: 0.01)
	}

}

final class KilojoulesTests: XCTestCase {
	func testConvertKnownKilojoulesToKilocalories_1() throws {
		let result = Energy.Kilojoules.toKilocalories(199.0)
		XCTAssertEqual(47.5621, result, accuracy: 0.01)
	}

	func testConvertKnownKilojoulesToKilocalories_2() throws {
		let result = Energy.Kilojoules.toKilocalories(0.67)
		XCTAssertEqual(0.1601338, result, accuracy: 0.01)
	}

	func testConvertKnownKilojoulesToKilocalories_3() throws {
		let result = Energy.Kilojoules.toKilocalories(4.7)
		XCTAssertEqual(1.12333, result, accuracy: 0.01)
	}

	func testConvertKnownKilojoulesToJoules_1() throws {
		let result = Energy.Kilojoules.toJoules(4.7)
		XCTAssertEqual(4700.0, result, accuracy: 0.01)
	}

	func testConvertKnownKilojoulesToJoules_2() throws {
		let result = Energy.Kilojoules.toJoules(7.8)
		XCTAssertEqual(7800.0, result, accuracy: 0.01)
	}

	func testConvertKnownKilojoulesToJoules_3() throws {
		let result = Energy.Kilojoules.toJoules(1800.0)
		XCTAssertEqual(1800000.0, result, accuracy: 0.01)
	}

	func testConvertKnownKilojoulesToBtu_1() throws {
		let result = Energy.Kilojoules.toBtu(1800.0)
		XCTAssertEqual(1706.070, result, accuracy: 0.01)
	}

	func testConvertKnownKilojoulesToBtu_2() throws {
		let result = Energy.Kilojoules.toBtu(1.4)
		XCTAssertEqual(1.32694, result, accuracy: 0.01)
	}

	func testConvertKnownKilojoulesToBtu_3() throws {
		let result = Energy.Kilojoules.toBtu(89.2)
		XCTAssertEqual(84.54529, result, accuracy: 0.01)
	}

	func testConvertKnownKilojoulesToCalories_1() throws {
		let result = Energy.Kilojoules.toCalories(67.0)
		XCTAssertEqual(16013.381899, result, accuracy: 0.01)
	}

	func testConvertKnownKilojoulesToCalories_2() throws {
		let result = Energy.Kilojoules.toCalories(1.4)
		XCTAssertEqual(334.608, result, accuracy: 0.01)
	}

	func testConvertKnownKilojoulesToCalories_3() throws {
		let result = Energy.Kilojoules.toCalories(87.0)
		XCTAssertEqual(20793.5, result, accuracy: 0.01)
	}

	func testConvertKnownKilojoulesToUSTherms_1() throws {
		let result = Energy.Kilojoules.toUSTherms(123456.0)
		XCTAssertEqual(1.17041649, result, accuracy: 0.01)
	}

	func testConvertKnownKilojoulesToUSTherms_2() throws {
		let result = Energy.Kilojoules.toUSTherms(88000.0)
		XCTAssertEqual(0.83427822, result, accuracy: 0.01)
	}

	func testConvertKnownKilojoulesToUSTherms_3() throws {
		let result = Energy.Kilojoules.toUSTherms(9000.0)
		XCTAssertEqual(0.08532391, result, accuracy: 0.01)
	}

	func testConvertKnownKilojoulesToWattHours_1() throws {
		let result = Energy.Kilojoules.toWattHours(98000.0)
		XCTAssertEqual(27222.222, result, accuracy: 0.01)
	}

	func testConvertKnownKilojoulesToWattHours_2() throws {
		let result = Energy.Kilojoules.toWattHours(1.5)
		XCTAssertEqual(0.416667, result, accuracy: 0.01)
	}

	func testConvertKnownKilojoulesToWattHours_3() throws {
		let result = Energy.Kilojoules.toWattHours(67.9)
		XCTAssertEqual(18.86111, result, accuracy: 0.01)
	}

	func testConvertKnownKilojoulesToKilowattHours_1() throws {
		let result = Energy.Kilojoules.toKilowattHours(8000.0)
		XCTAssertEqual(2.222222, result, accuracy: 0.01)
	}

	func testConvertKnownKilojoulesToKilowattHours_2() throws {
		let result = Energy.Kilojoules.toKilowattHours(67.99)
		XCTAssertEqual(0.018886111, result, accuracy: 0.01)
	}

	func testConvertKnownKilojoulesToKilowattHours_3() throws {
		let result = Energy.Kilojoules.toKilowattHours(406.8)
		XCTAssertEqual(0.113, result, accuracy: 0.01)
	}

	func testConvertKnownKilojoulesToFootPounds_1() throws {
		let result = Energy.Kilojoules.toFootPounds(100.9)
		XCTAssertEqual(74420.00579, result, accuracy: 0.01)
	}

	func testConvertKnownKilojoulesToFootPounds_2() throws {
		let result = Energy.Kilojoules.toFootPounds(2.4)
		XCTAssertEqual(1770.15, result, accuracy: 0.01)
	}

	func testConvertKnownKilojoulesToFootPounds_3() throws {
		let result = Energy.Kilojoules.toFootPounds(0.9)
		XCTAssertEqual(663.806, result, accuracy: 0.01)
	}

	func testConvertKnownKilojoulesToElectronvolts_1() throws {
		let result = Energy.Kilojoules.toElectronvolts(0.000000999)
		XCTAssertEqual(6235268234766989.0, result, accuracy: 0.01)
	}

	func testConvertKnownKilojoulesToElectronvolts_2() throws {
		let result = Energy.Kilojoules.toElectronvolts(0.0000002)
		XCTAssertEqual(1248301948902300.0, result, accuracy: 0.01)
	}

	func testConvertKnownKilojoulesToElectronvolts_3() throws {
		let result = Energy.Kilojoules.toElectronvolts(0.00567)
		XCTAssertEqual(3.5389360251380204E+19, result, accuracy: 0.01)
	}

}

final class KilowattHoursTests: XCTestCase {
	func testConvertKnownKilowattHoursToKilojoules_1() throws {
		let result = Energy.KilowattHours.toKilojoules(0.6)
		XCTAssertEqual(2160.0, result, accuracy: 0.01)
	}

	func testConvertKnownKilowattHoursToKilojoules_2() throws {
		let result = Energy.KilowattHours.toKilojoules(134.0)
		XCTAssertEqual(482400.0, result, accuracy: 0.01)
	}

	func testConvertKnownKilowattHoursToKilojoules_3() throws {
		let result = Energy.KilowattHours.toKilojoules(45.6)
		XCTAssertEqual(164160.0, result, accuracy: 0.01)
	}

	func testConvertKnownKilowattHoursToKilocalories_1() throws {
		let result = Energy.KilowattHours.toKilocalories(45.6)
		XCTAssertEqual(39235.1976, result, accuracy: 0.01)
	}

	func testConvertKnownKilowattHoursToKilocalories_2() throws {
		let result = Energy.KilowattHours.toKilocalories(12.0)
		XCTAssertEqual(10325.052, result, accuracy: 0.01)
	}

	func testConvertKnownKilowattHoursToKilocalories_3() throws {
		let result = Energy.KilowattHours.toKilocalories(0.4)
		XCTAssertEqual(344.168, result, accuracy: 0.01)
	}

	func testConvertKnownKilowattHoursToJoules_1() throws {
		let result = Energy.KilowattHours.toJoules(0.01)
		XCTAssertEqual(36000.0, result, accuracy: 0.01)
	}

	func testConvertKnownKilowattHoursToJoules_2() throws {
		let result = Energy.KilowattHours.toJoules(0.009)
		XCTAssertEqual(32400.0, result, accuracy: 0.01)
	}

	func testConvertKnownKilowattHoursToJoules_3() throws {
		let result = Energy.KilowattHours.toJoules(2.0)
		XCTAssertEqual(7.2e+6, result, accuracy: 0.01)
	}

	func testConvertKnownKilowattHoursToBtu_1() throws {
		let result = Energy.KilowattHours.toBtu(2.0)
		XCTAssertEqual(6824.28, result, accuracy: 0.01)
	}

	func testConvertKnownKilowattHoursToBtu_2() throws {
		let result = Energy.KilowattHours.toBtu(0.7)
		XCTAssertEqual(2388.4979, result, accuracy: 0.01)
	}

	func testConvertKnownKilowattHoursToBtu_3() throws {
		let result = Energy.KilowattHours.toBtu(0.02)
		XCTAssertEqual(68.24283, result, accuracy: 0.01)
	}

	func testConvertKnownKilowattHoursToCalories_1() throws {
		let result = Energy.KilowattHours.toCalories(0.1)
		XCTAssertEqual(86042.1, result, accuracy: 0.01)
	}

	func testConvertKnownKilowattHoursToCalories_2() throws {
		let result = Energy.KilowattHours.toCalories(0.07)
		XCTAssertEqual(60229.47, result, accuracy: 0.01)
	}

	func testConvertKnownKilowattHoursToCalories_3() throws {
		let result = Energy.KilowattHours.toCalories(0.0123)
		XCTAssertEqual(10583.174, result, accuracy: 0.01)
	}

	func testConvertKnownKilowattHoursToUSTherms_1() throws {
		let result = Energy.KilowattHours.toUSTherms(5.0)
		XCTAssertEqual(0.170648, result, accuracy: 0.01)
	}

	func testConvertKnownKilowattHoursToUSTherms_2() throws {
		let result = Energy.KilowattHours.toUSTherms(234.0)
		XCTAssertEqual(7.98632, result, accuracy: 0.01)
	}

	func testConvertKnownKilowattHoursToUSTherms_3() throws {
		let result = Energy.KilowattHours.toUSTherms(1001.0)
		XCTAssertEqual(34.16369, result, accuracy: 0.01)
	}

	func testConvertKnownKilowattHoursToWattHours_1() throws {
		let result = Energy.KilowattHours.toWattHours(123.0)
		XCTAssertEqual(123000.0, result, accuracy: 0.01)
	}

	func testConvertKnownKilowattHoursToWattHours_2() throws {
		let result = Energy.KilowattHours.toWattHours(98.4)
		XCTAssertEqual(98400.0, result, accuracy: 0.01)
	}

	func testConvertKnownKilowattHoursToWattHours_3() throws {
		let result = Energy.KilowattHours.toWattHours(1.6)
		XCTAssertEqual(1600.0, result, accuracy: 0.01)
	}

	func testConvertKnownKilowattHoursToFootPounds_1() throws {
		let result = Energy.KilowattHours.toFootPounds(0.001)
		XCTAssertEqual(2655.196219, result, accuracy: 0.01)
	}

	func testConvertKnownKilowattHoursToFootPounds_2() throws {
		let result = Energy.KilowattHours.toFootPounds(0.09)
		XCTAssertEqual(238967.6597, result, accuracy: 0.01)
	}

	func testConvertKnownKilowattHoursToFootPounds_3() throws {
		let result = Energy.KilowattHours.toFootPounds(0.0006)
		XCTAssertEqual(1593.1177314, result, accuracy: 0.01)
	}

	func testConvertKnownKilowattHoursToElectronvolts_1() throws {
		let result = Energy.KilowattHours.toElectronvolts(0.000008)
		XCTAssertEqual(179755440000000000000.0, result, accuracy: 0.01)
	}

	func testConvertKnownKilowattHoursToElectronvolts_2() throws {
		let result = Energy.KilowattHours.toElectronvolts(0.0000000128)
		XCTAssertEqual(2.8760870400000003E+17, result, accuracy: 0.01)
	}

	func testConvertKnownKilowattHoursToElectronvolts_3() throws {
		let result = Energy.KilowattHours.toElectronvolts(0.0000000001)
		XCTAssertEqual(2246943000000000.2, result, accuracy: 0.01)
	}

}

final class USThermsTests: XCTestCase {
	func testConvertKnownUSThermsToKilojoules_1() throws {
		let result = Energy.USTherms.toKilojoules(0.009)
		XCTAssertEqual(949.3236, result, accuracy: 0.01)
	}

	func testConvertKnownUSThermsToKilojoules_2() throws {
		let result = Energy.USTherms.toKilojoules(3.0)
		XCTAssertEqual(316440.12, result, accuracy: 0.01)
	}

	func testConvertKnownUSThermsToKilojoules_3() throws {
		let result = Energy.USTherms.toKilojoules(1.9)
		XCTAssertEqual(200412.075, result, accuracy: 0.01)
	}

	func testConvertKnownUSThermsToKilocalories_1() throws {
		let result = Energy.USTherms.toKilocalories(1.1)
		XCTAssertEqual(27731.484079398004, result, accuracy: 0.01)
	}

	func testConvertKnownUSThermsToKilocalories_2() throws {
		let result = Energy.USTherms.toKilocalories(0.04)
		XCTAssertEqual(1008.417, result, accuracy: 0.01)
	}

	func testConvertKnownUSThermsToKilocalories_3() throws {
		let result = Energy.USTherms.toKilocalories(0.0123)
		XCTAssertEqual(310.088174, result, accuracy: 0.01)
	}

	func testConvertKnownUSThermsToJoules_1() throws {
		let result = Energy.USTherms.toJoules(0.008)
		XCTAssertEqual(843843.2, result, accuracy: 0.01)
	}

	func testConvertKnownUSThermsToJoules_2() throws {
		let result = Energy.USTherms.toJoules(3.4e-6)
		XCTAssertEqual(358.633, result, accuracy: 0.01)
	}

	func testConvertKnownUSThermsToJoules_3() throws {
		let result = Energy.USTherms.toJoules(0.00678)
		XCTAssertEqual(715157.112, result, accuracy: 0.01)
	}

	func testConvertKnownUSThermsToBtu_1() throws {
		let result = Energy.USTherms.toBtu(0.00666)
		XCTAssertEqual(665.8409891, result, accuracy: 0.01)
	}

	func testConvertKnownUSThermsToBtu_2() throws {
		let result = Energy.USTherms.toBtu(2.0)
		XCTAssertEqual(199952.249, result, accuracy: 0.01)
	}

	func testConvertKnownUSThermsToBtu_3() throws {
		let result = Energy.USTherms.toBtu(0.9)
		XCTAssertEqual(89978.51204, result, accuracy: 0.01)
	}

	func testConvertKnownUSThermsToCalories_1() throws {
		let result = Energy.USTherms.toCalories(0.003)
		XCTAssertEqual(75631.262, result, accuracy: 0.01)
	}

	func testConvertKnownUSThermsToCalories_2() throws {
		let result = Energy.USTherms.toCalories(6.8e-3)
		XCTAssertEqual(171430.856, result, accuracy: 0.01)
	}

	func testConvertKnownUSThermsToCalories_3() throws {
		let result = Energy.USTherms.toCalories(0.0008)
		XCTAssertEqual(20168.3365, result, accuracy: 0.01)
	}

	func testConvertKnownUSThermsToWattHours_1() throws {
		let result = Energy.USTherms.toWattHours(6.0)
		XCTAssertEqual(175800.59, result, accuracy: 0.01)
	}

	func testConvertKnownUSThermsToWattHours_2() throws {
		let result = Energy.USTherms.toWattHours(1.9)
		XCTAssertEqual(55670.189, result, accuracy: 0.01)
	}

	func testConvertKnownUSThermsToWattHours_3() throws {
		let result = Energy.USTherms.toWattHours(0.07)
		XCTAssertEqual(2051.008, result, accuracy: 0.01)
	}

	func testConvertKnownUSThermsToKilowattHours_1() throws {
		let result = Energy.USTherms.toKilowattHours(0.9)
		XCTAssertEqual(26.3701, result, accuracy: 0.01)
	}

	func testConvertKnownUSThermsToKilowattHours_2() throws {
		let result = Energy.USTherms.toKilowattHours(7.9)
		XCTAssertEqual(231.471, result, accuracy: 0.01)
	}

	func testConvertKnownUSThermsToKilowattHours_3() throws {
		let result = Energy.USTherms.toKilowattHours(1.4)
		XCTAssertEqual(41.0202, result, accuracy: 0.01)
	}

	func testConvertKnownUSThermsToFootPounds_1() throws {
		let result = Energy.USTherms.toFootPounds(0.009)
		XCTAssertEqual(700352.43389267, result, accuracy: 0.01)
	}

	func testConvertKnownUSThermsToFootPounds_2() throws {
		let result = Energy.USTherms.toFootPounds(0.02)
		XCTAssertEqual(1556338.74198, result, accuracy: 0.01)
	}

	func testConvertKnownUSThermsToFootPounds_3() throws {
		let result = Energy.USTherms.toFootPounds(0.0003)
		XCTAssertEqual(23345.081129, result, accuracy: 0.01)
	}

	func testConvertKnownUSThermsToElectronvolts_1() throws {
		let result = Energy.USTherms.toElectronvolts(0.0000009)
		XCTAssertEqual(592520940098199000000.0, result, accuracy: 0.01)
	}

	func testConvertKnownUSThermsToElectronvolts_2() throws {
		let result = Energy.USTherms.toElectronvolts(0.000000001339)
		XCTAssertEqual(8.815394875460983E+17, result, accuracy: 0.01)
	}

	func testConvertKnownUSThermsToElectronvolts_3() throws {
		let result = Energy.USTherms.toElectronvolts(0.0000000000666)
		XCTAssertEqual(43846549567266728.0, result, accuracy: 0.01)
	}

}

final class WattHoursTests: XCTestCase {
	func testConvertKnownWattHoursToKilojoules_1() throws {
		let result = Energy.WattHours.toKilojoules(1.6)
		XCTAssertEqual(5.76, result, accuracy: 0.01)
	}

	func testConvertKnownWattHoursToKilojoules_2() throws {
		let result = Energy.WattHours.toKilojoules(67.0)
		XCTAssertEqual(241.2, result, accuracy: 0.01)
	}

	func testConvertKnownWattHoursToKilojoules_3() throws {
		let result = Energy.WattHours.toKilojoules(8.12)
		XCTAssertEqual(29.232, result, accuracy: 0.01)
	}

	func testConvertKnownWattHoursToKilocalories_1() throws {
		let result = Energy.WattHours.toKilocalories(8.12)
		XCTAssertEqual(6.986616, result, accuracy: 0.01)
	}

	func testConvertKnownWattHoursToKilocalories_2() throws {
		let result = Energy.WattHours.toKilocalories(170.0)
		XCTAssertEqual(146.272, result, accuracy: 0.01)
	}

	func testConvertKnownWattHoursToKilocalories_3() throws {
		let result = Energy.WattHours.toKilocalories(19.2)
		XCTAssertEqual(16.52008, result, accuracy: 0.01)
	}

	func testConvertKnownWattHoursToJoules_1() throws {
		let result = Energy.WattHours.toJoules(6.7)
		XCTAssertEqual(24120.0, result, accuracy: 0.01)
	}

	func testConvertKnownWattHoursToJoules_2() throws {
		let result = Energy.WattHours.toJoules(12.34)
		XCTAssertEqual(44424.0, result, accuracy: 0.01)
	}

	func testConvertKnownWattHoursToJoules_3() throws {
		let result = Energy.WattHours.toJoules(0.09)
		XCTAssertEqual(324.0, result, accuracy: 0.01)
	}

	func testConvertKnownWattHoursToBtu_1() throws {
		let result = Energy.WattHours.toBtu(34.0)
		XCTAssertEqual(116.013, result, accuracy: 0.01)
	}

	func testConvertKnownWattHoursToBtu_2() throws {
		let result = Energy.WattHours.toBtu(179.2)
		XCTAssertEqual(611.45578, result, accuracy: 0.01)
	}

	func testConvertKnownWattHoursToBtu_3() throws {
		let result = Energy.WattHours.toBtu(0.9)
		XCTAssertEqual(3.07093, result, accuracy: 0.01)
	}

	func testConvertKnownWattHoursToCalories_1() throws {
		let result = Energy.WattHours.toCalories(0.2)
		XCTAssertEqual(172.084, result, accuracy: 0.01)
	}

	func testConvertKnownWattHoursToCalories_2() throws {
		let result = Energy.WattHours.toCalories(0.09)
		XCTAssertEqual(77.43786, result, accuracy: 0.01)
	}

	func testConvertKnownWattHoursToCalories_3() throws {
		let result = Energy.WattHours.toCalories(12.0)
		XCTAssertEqual(10325.06754, result, accuracy: 0.01)
	}

	func testConvertKnownWattHoursToUSTherms_1() throws {
		let result = Energy.WattHours.toUSTherms(1090.0)
		XCTAssertEqual(0.03720122, result, accuracy: 0.01)
	}

	func testConvertKnownWattHoursToUSTherms_2() throws {
		let result = Energy.WattHours.toUSTherms(49990.0)
		XCTAssertEqual(1.7061369, result, accuracy: 0.01)
	}

	func testConvertKnownWattHoursToUSTherms_3() throws {
		let result = Energy.WattHours.toUSTherms(900800.0)
		XCTAssertEqual(30.7439107, result, accuracy: 0.01)
	}

	func testConvertKnownWattHoursToKilowattHours_1() throws {
		let result = Energy.WattHours.toKilowattHours(98.0)
		XCTAssertEqual(0.098, result, accuracy: 0.01)
	}

	func testConvertKnownWattHoursToKilowattHours_2() throws {
		let result = Energy.WattHours.toKilowattHours(12.5)
		XCTAssertEqual(0.0125, result, accuracy: 0.01)
	}

	func testConvertKnownWattHoursToKilowattHours_3() throws {
		let result = Energy.WattHours.toKilowattHours(0.6)
		XCTAssertEqual(0.0006, result, accuracy: 0.01)
	}

	func testConvertKnownWattHoursToFootPounds_1() throws {
		let result = Energy.WattHours.toFootPounds(1.5)
		XCTAssertEqual(3982.829, result, accuracy: 0.01)
	}

	func testConvertKnownWattHoursToFootPounds_2() throws {
		let result = Energy.WattHours.toFootPounds(0.3)
		XCTAssertEqual(796.567, result, accuracy: 0.01)
	}

	func testConvertKnownWattHoursToFootPounds_3() throws {
		let result = Energy.WattHours.toFootPounds(90.1)
		XCTAssertEqual(239235.3219, result, accuracy: 0.01)
	}

	func testConvertKnownWattHoursToElectronvolts_1() throws {
		let result = Energy.WattHours.toElectronvolts(0.0000000000666)
		XCTAssertEqual(1496463565615.39, result, accuracy: 0.01)
	}

	func testConvertKnownWattHoursToElectronvolts_2() throws {
		let result = Energy.WattHours.toElectronvolts(0.000000008)
		XCTAssertEqual(179755383257104.03, result, accuracy: 0.01)
	}

	func testConvertKnownWattHoursToElectronvolts_3() throws {
		let result = Energy.WattHours.toElectronvolts(0.0000123)
		XCTAssertEqual(2.7637390175779744E+17, result, accuracy: 0.01)
	}

}

