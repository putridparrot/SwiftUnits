// <auto-generated>
// This code was generated by the UnitCodeGenerator tool
//
// Changes to this file will be lost if the code is regenerated
// </auto-generated>

public final class DataStorage {
	@available(*, unavailable) private init() {}

	public final class Bits {
		@available(*, unavailable) private init() {}

		public static func toKilobits(_ value : Double) -> Double {
			return value / 1000.0;
		}
		public static func toMegabits(_ value : Double) -> Double {
			return value / 1e+6;
		}
		public static func toGigabits(_ value : Double) -> Double {
			return value / 1e+9;
		}
		public static func toTerabits(_ value : Double) -> Double {
			return value / 1e+12;
		}
		public static func toKilobytes(_ value : Double) -> Double {
			return value / 8000.0;
		}
		public static func toMegabytes(_ value : Double) -> Double {
			return value / 8e+6;
		}
		public static func toGigabytes(_ value : Double) -> Double {
			return value / 8e+9;
		}
		public static func toTerabytes(_ value : Double) -> Double {
			return value / 8e+12;
		}
		public static func toKibibits(_ value : Double) -> Double {
			return value / 1024.0;
		}
		public static func toMebibits(_ value : Double) -> Double {
			return value / 1048576.0;
		}
	}

	public final class Gigabits {
		@available(*, unavailable) private init() {}

		public static func toBits(_ value : Double) -> Double {
			return value * 1e+9;
		}
		public static func toKilobits(_ value : Double) -> Double {
			return value * 1e+6;
		}
		public static func toMegabits(_ value : Double) -> Double {
			return value * 1000.0;
		}
		public static func toTerabits(_ value : Double) -> Double {
			return value / 1000.0;
		}
		public static func toKilobytes(_ value : Double) -> Double {
			return value * 125000.0;
		}
		public static func toMegabytes(_ value : Double) -> Double {
			return value * 125.0;
		}
		public static func toGigabytes(_ value : Double) -> Double {
			return value / 8.0;
		}
		public static func toTerabytes(_ value : Double) -> Double {
			return value / 8000.0;
		}
		public static func toKibibits(_ value : Double) -> Double {
			return value * 976562.5;
		}
		public static func toMebibits(_ value : Double) -> Double {
			return value * 954.0;
		}
	}

	public final class Gigabytes {
		@available(*, unavailable) private init() {}

		public static func toBits(_ value : Double) -> Double {
			return value * 8e+9;
		}
		public static func toKilobits(_ value : Double) -> Double {
			return value * 8e+6;
		}
		public static func toMegabits(_ value : Double) -> Double {
			return value * 8000.0;
		}
		public static func toGigabits(_ value : Double) -> Double {
			return value * 8.0;
		}
		public static func toTerabits(_ value : Double) -> Double {
			return value / 125.0;
		}
		public static func toKilobytes(_ value : Double) -> Double {
			return value * 1e+6;
		}
		public static func toMegabytes(_ value : Double) -> Double {
			return value * 1000.0;
		}
		public static func toTerabytes(_ value : Double) -> Double {
			return value / 1000.0;
		}
		public static func toKibibits(_ value : Double) -> Double {
			return value * 7812500.0;
		}
		public static func toMebibits(_ value : Double) -> Double {
			return value * 7629.39;
		}
	}

	public final class Kibibits {
		@available(*, unavailable) private init() {}

		public static func toBits(_ value : Double) -> Double {
			return value * 1024.0;
		}
		public static func toKilobits(_ value : Double) -> Double {
			return value * 1.024;
		}
		public static func toMegabits(_ value : Double) -> Double {
			return value / 976.563;
		}
		public static func toGigabits(_ value : Double) -> Double {
			return value / 976562.5;
		}
		public static func toTerabits(_ value : Double) -> Double {
			return value / 976562500.0;
		}
		public static func toKilobytes(_ value : Double) -> Double {
			return value / 7.812;
		}
		public static func toMegabytes(_ value : Double) -> Double {
			return value / 7812.5;
		}
		public static func toGigabytes(_ value : Double) -> Double {
			return value / 7812500.0;
		}
		public static func toTerabytes(_ value : Double) -> Double {
			return value / 7812500000.0;
		}
		public static func toMebibits(_ value : Double) -> Double {
			return value / 1024.0;
		}
	}

	public final class Kilobits {
		@available(*, unavailable) private init() {}

		public static func toBits(_ value : Double) -> Double {
			return value * 1000.0;
		}
		public static func toMegabits(_ value : Double) -> Double {
			return value / 1000.0;
		}
		public static func toGigabits(_ value : Double) -> Double {
			return value / 1e+6;
		}
		public static func toTerabits(_ value : Double) -> Double {
			return value / 1e+9;
		}
		public static func toKilobytes(_ value : Double) -> Double {
			return value / 8.0;
		}
		public static func toMegabytes(_ value : Double) -> Double {
			return value / 8000.0;
		}
		public static func toGigabytes(_ value : Double) -> Double {
			return value / 8e+6;
		}
		public static func toTerabytes(_ value : Double) -> Double {
			return value / 8e+9;
		}
		public static func toKibibits(_ value : Double) -> Double {
			return value / 1.024;
		}
		public static func toMebibits(_ value : Double) -> Double {
			return value / 1048.58;
		}
	}

	public final class Kilobytes {
		@available(*, unavailable) private init() {}

		public static func toBits(_ value : Double) -> Double {
			return value * 8000.0;
		}
		public static func toKilobits(_ value : Double) -> Double {
			return value * 8.0;
		}
		public static func toMegabits(_ value : Double) -> Double {
			return value / 125.0;
		}
		public static func toGigabits(_ value : Double) -> Double {
			return value / 125000.0;
		}
		public static func toTerabits(_ value : Double) -> Double {
			return value / 1.25e+8;
		}
		public static func toMegabytes(_ value : Double) -> Double {
			return value / 1000.0;
		}
		public static func toGigabytes(_ value : Double) -> Double {
			return value / 1e+6;
		}
		public static func toTerabytes(_ value : Double) -> Double {
			return value / 1e+9;
		}
		public static func toKibibits(_ value : Double) -> Double {
			return value * 7.812;
		}
		public static func toMebibits(_ value : Double) -> Double {
			return value * 0.00762939;
		}
	}

	public final class Mebibits {
		@available(*, unavailable) private init() {}

		public static func toBits(_ value : Double) -> Double {
			return value * 1048576.0;
		}
		public static func toKilobits(_ value : Double) -> Double {
			return value * 1048.58;
		}
		public static func toMegabits(_ value : Double) -> Double {
			return value * 1.04858;
		}
		public static func toGigabits(_ value : Double) -> Double {
			return value / 954.0;
		}
		public static func toTerabits(_ value : Double) -> Double {
			return value / 953674.0;
		}
		public static func toKilobytes(_ value : Double) -> Double {
			return value / 0.00762939;
		}
		public static func toMegabytes(_ value : Double) -> Double {
			return value / 7.62939;
		}
		public static func toGigabytes(_ value : Double) -> Double {
			return value / 7629.39;
		}
		public static func toTerabytes(_ value : Double) -> Double {
			return value * 0.000000131072;
		}
		public static func toKibibits(_ value : Double) -> Double {
			return value * 1024.0;
		}
	}

	public final class Megabits {
		@available(*, unavailable) private init() {}

		public static func toBits(_ value : Double) -> Double {
			return value * 1e+6;
		}
		public static func toKilobits(_ value : Double) -> Double {
			return value * 1000.0;
		}
		public static func toGigabits(_ value : Double) -> Double {
			return value / 1000.0;
		}
		public static func toTerabits(_ value : Double) -> Double {
			return value / 1e+6;
		}
		public static func toKilobytes(_ value : Double) -> Double {
			return value * 125.0;
		}
		public static func toMegabytes(_ value : Double) -> Double {
			return value / 8.0;
		}
		public static func toGigabytes(_ value : Double) -> Double {
			return value / 8000.0;
		}
		public static func toTerabytes(_ value : Double) -> Double {
			return value / 8e+6;
		}
		public static func toKibibits(_ value : Double) -> Double {
			return value * 976.563;
		}
		public static func toMebibits(_ value : Double) -> Double {
			return value / 1.04858;
		}
	}

	public final class Megabytes {
		@available(*, unavailable) private init() {}

		public static func toBits(_ value : Double) -> Double {
			return value * 8e+6;
		}
		public static func toKilobits(_ value : Double) -> Double {
			return value * 8000.0;
		}
		public static func toMegabits(_ value : Double) -> Double {
			return value * 8.0;
		}
		public static func toGigabits(_ value : Double) -> Double {
			return value / 125.0;
		}
		public static func toTerabits(_ value : Double) -> Double {
			return value / 125000.0;
		}
		public static func toKilobytes(_ value : Double) -> Double {
			return value * 1000.0;
		}
		public static func toGigabytes(_ value : Double) -> Double {
			return value / 1000.0;
		}
		public static func toTerabytes(_ value : Double) -> Double {
			return value / 1e+6;
		}
		public static func toKibibits(_ value : Double) -> Double {
			return value * 7812.5;
		}
		public static func toMebibits(_ value : Double) -> Double {
			return value * 7.62939;
		}
	}

	public final class Terabits {
		@available(*, unavailable) private init() {}

		public static func toBits(_ value : Double) -> Double {
			return value * 1e+12;
		}
		public static func toKilobits(_ value : Double) -> Double {
			return value * 1e+9;
		}
		public static func toMegabits(_ value : Double) -> Double {
			return value * 1e+6;
		}
		public static func toGigabits(_ value : Double) -> Double {
			return value * 1000.0;
		}
		public static func toKilobytes(_ value : Double) -> Double {
			return value * 1.25e+8;
		}
		public static func toMegabytes(_ value : Double) -> Double {
			return value * 125000.0;
		}
		public static func toGigabytes(_ value : Double) -> Double {
			return value * 125.0;
		}
		public static func toTerabytes(_ value : Double) -> Double {
			return value / 8.0;
		}
		public static func toKibibits(_ value : Double) -> Double {
			return value * 976562500.0;
		}
		public static func toMebibits(_ value : Double) -> Double {
			return value * 953674.0;
		}
	}

	public final class Terabytes {
		@available(*, unavailable) private init() {}

		public static func toBits(_ value : Double) -> Double {
			return value * 8e+12;
		}
		public static func toKilobits(_ value : Double) -> Double {
			return value * 8e+9;
		}
		public static func toMegabits(_ value : Double) -> Double {
			return value * 8e+6;
		}
		public static func toGigabits(_ value : Double) -> Double {
			return value * 8000.0;
		}
		public static func toTerabits(_ value : Double) -> Double {
			return value * 8.0;
		}
		public static func toKilobytes(_ value : Double) -> Double {
			return value * 1e+9;
		}
		public static func toMegabytes(_ value : Double) -> Double {
			return value * 1e+6;
		}
		public static func toGigabytes(_ value : Double) -> Double {
			return value * 1000.0;
		}
		public static func toKibibits(_ value : Double) -> Double {
			return value * 7812500000.0;
		}
		public static func toMebibits(_ value : Double) -> Double {
			return value / 0.000000131072;
		}
	}
}
