// <auto-generated>
// This code was generated by the UnitCodeGenerator tool
//
// Changes to this file will be lost if the code is regenerated
// </auto-generated>

public final class Angle {
	@available(*, unavailable) private init() {}

	public final class Degrees {
		@available(*, unavailable) private init() {}

		public static func toRadians(_ value : Double) -> Double {
			return value * Double.pi/180.0;
		}
		public static func toGradians(_ value : Double) -> Double {
			return value * 200.0/180.0;
		}
		public static func toMilliradians(_ value : Double) -> Double {
			return value * 17.4533;
		}
		public static func toMinuteOfArc(_ value : Double) -> Double {
			return value * 60.0;
		}
		public static func toSecondsOfArc(_ value : Double) -> Double {
			return value * 3600.0;
		}
	}

	public final class Gradians {
		@available(*, unavailable) private init() {}

		public static func toDegrees(_ value : Double) -> Double {
			return value * 180.0/200.0;
		}
		public static func toRadians(_ value : Double) -> Double {
			return value * Double.pi/200.0;
		}
		public static func toMilliradians(_ value : Double) -> Double {
			return value * 15.708;
		}
		public static func toMinuteOfArc(_ value : Double) -> Double {
			return value * 54.0;
		}
		public static func toSecondsOfArc(_ value : Double) -> Double {
			return value * 3240.0;
		}
	}

	public final class Milliradians {
		@available(*, unavailable) private init() {}

		public static func toDegrees(_ value : Double) -> Double {
			return value * 180.0/(1000.0 * Double.pi);
		}
		public static func toRadians(_ value : Double) -> Double {
			return value / 1000.0;
		}
		public static func toGradians(_ value : Double) -> Double {
			return value * 200.0/(1000.0 * Double.pi);
		}
		public static func toMinuteOfArc(_ value : Double) -> Double {
			return value * (60.0 * 180.0)/(1000.0 * Double.pi);
		}
		public static func toSecondsOfArc(_ value : Double) -> Double {
			return value * (3600.0 * 180.0)/(1000.0 * Double.pi);
		}
	}

	public final class MinuteOfArc {
		@available(*, unavailable) private init() {}

		public static func toDegrees(_ value : Double) -> Double {
			return value / 60.0;
		}
		public static func toRadians(_ value : Double) -> Double {
			return value * Double.pi/(60.0 * 180.0);
		}
		public static func toGradians(_ value : Double) -> Double {
			return value / 54.0;
		}
		public static func toMilliradians(_ value : Double) -> Double {
			return value * (1000.0 * Double.pi) / (60.0 * 180.0);
		}
		public static func toSecondsOfArc(_ value : Double) -> Double {
			return value * 60.0;
		}
	}

	public final class Radians {
		@available(*, unavailable) private init() {}

		public static func toDegrees(_ value : Double) -> Double {
			return value * 180.0/Double.pi;
		}
		public static func toGradians(_ value : Double) -> Double {
			return value * 200.0/Double.pi;
		}
		public static func toMilliradians(_ value : Double) -> Double {
			return value * 1000.0;
		}
		public static func toMinuteOfArc(_ value : Double) -> Double {
			return value * (60.0 * 180.0)/Double.pi;
		}
		public static func toSecondsOfArc(_ value : Double) -> Double {
			return value * (3600.0 * 180.0)/Double.pi;
		}
	}

	public final class SecondsOfArc {
		@available(*, unavailable) private init() {}

		public static func toDegrees(_ value : Double) -> Double {
			return value / 3600.0;
		}
		public static func toRadians(_ value : Double) -> Double {
			return value * Double.pi/(180.0 * 3600.0);
		}
		public static func toGradians(_ value : Double) -> Double {
			return value / 3240.0;
		}
		public static func toMilliradians(_ value : Double) -> Double {
			return value * (1000.0 * Double.pi) / (180.0 * 3600.0);
		}
		public static func toMinuteOfArc(_ value : Double) -> Double {
			return value / 60.0;
		}
	}
}
